{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Hotspot = require('./Hotspot');\nvar calcRect = require('./util/calcRect');\nvar positionAbsolutely = require('./util/positionAbsolutely');\nvar setAbsolute = require('./util/dom').setAbsolute;\nvar setOverflowHidden = require('./util/dom').setOverflowHidden;\nvar setOverflowVisible = require('./util/dom').setOverflowVisible;\nvar setNullSize = require('./util/dom').setNullSize;\nvar setPixelSize = require('./util/dom').setPixelSize;\nvar setPointerEvents = require('./util/dom').setWithVendorPrefix('pointer-events');\nvar clearOwnProperties = require('./util/clearOwnProperties');\n\n/**\n * Signals that a hotspot has been created or destroyed on the container.\n * @event HotspotContainer#hotspotsChange\n */\n\n/**\n * @class HotspotContainer\n * @classdesc\n *\n * Creates a DOM element to hold {@link Hotspot hotspots} and updates their\n * position when necessary.\n *\n * @param {Element} parentDomElement The DOM element inside which the container\n *     should be created.\n * @param {Stage} stage The underlying stage.\n * @param {View} view The view according to which the hotspots are positioned.\n * @param {RenderLoop} renderLoop The render loop indicating when the hotspots\n *     must be rendered.\n * @param {Object} opts\n * @param {RectSpec} opts.rect Rectangular region covered by the container. See\n *    {@link Effects#rect}.\n */\nfunction HotspotContainer(parentDomElement, stage, view, renderLoop, opts) {\n  opts = opts || {};\n  this._parentDomElement = parentDomElement;\n  this._stage = stage;\n  this._view = view;\n  this._renderLoop = renderLoop;\n\n  // Hotspot list.\n  this._hotspots = [];\n\n  // Whether the hotspot container should be visible.\n  this._visible = true;\n\n  // The current rect.\n  this._rect = opts.rect;\n\n  // Whether the visibility or the rect have changed since the last DOM update.\n  this._visibilityOrRectChanged = true;\n\n  // The last seen stage dimensions.\n  this._stageWidth = null;\n  this._stageHeight = null;\n\n  // Temporary variable to hold the calculated position and size.\n  this._tmpRect = {};\n\n  // Wrapper element. When the rect effect is set, the wrapper will have nonzero\n  // dimensions and `pointer-events: none` so that hotspots outside the rect are\n  // hidden, but no mouse events are hijacked.\n  this._hotspotContainerWrapper = document.createElement('div');\n  setAbsolute(this._hotspotContainerWrapper);\n  setPointerEvents(this._hotspotContainerWrapper, 'none');\n  this._parentDomElement.appendChild(this._hotspotContainerWrapper);\n\n  // Hotspot container element. It has zero dimensions and `pointer-events: all`\n  // to override the `pointer-events: none` on the wrapper and allow hotspots to\n  // be interacted with.\n  this._hotspotContainer = document.createElement('div');\n  setAbsolute(this._hotspotContainer);\n  setPointerEvents(this._hotspotContainer, 'all');\n  this._hotspotContainerWrapper.appendChild(this._hotspotContainer);\n\n  // Update when the hotspots change or scene is re-rendered.\n  this._updateHandler = this._update.bind(this);\n  this._renderLoop.addEventListener('afterRender', this._updateHandler);\n}\neventEmitter(HotspotContainer);\n\n/**\n * Destructor.\n */\nHotspotContainer.prototype.destroy = function () {\n  while (this._hotspots.length) {\n    this.destroyHotspot(this._hotspots[0]);\n  }\n  this._parentDomElement.removeChild(this._hotspotContainerWrapper);\n  this._renderLoop.removeEventListener('afterRender', this._updateHandler);\n  clearOwnProperties(this);\n};\n\n/**\n * @return {Element}\n */\nHotspotContainer.prototype.domElement = function () {\n  return this._hotspotContainer;\n};\n\n/**\n * @param {Rect} rect\n */\nHotspotContainer.prototype.setRect = function (rect) {\n  this._rect = rect;\n  this._visibilityOrRectChanged = true;\n};\n\n/**\n * @return {Rect}\n */\nHotspotContainer.prototype.rect = function () {\n  return this._rect;\n};\n\n/**\n * Creates a new hotspot in this container.\n *\n * @param {Element} domElement DOM element to use for the hotspot\n * @param {Object} coords The hotspot coordinates.\n *     Use {@link RectilinearViewCoords}` for a {@link RectilinearView} or\n *     {@link FlatViewCoords} for a {@link FlatView}.\n * @param {Object} opts Options in the same format as the `opts` argument to\n *     the {@link Hotspot} constructor.\n * @return {Hotspot}\n */\nHotspotContainer.prototype.createHotspot = function (domElement, coords, opts) {\n  coords = coords || {};\n  var hotspot = new Hotspot(domElement, this._hotspotContainer, this._view, coords, opts);\n  this._hotspots.push(hotspot);\n  hotspot._update();\n  this.emit('hotspotsChange');\n  return hotspot;\n};\n\n/**\n * @param {Hotspot} hotspot\n * @return {boolean}\n */\nHotspotContainer.prototype.hasHotspot = function (hotspot) {\n  return this._hotspots.indexOf(hotspot) >= 0;\n};\n\n/**\n * @return {Hotspot[]}\n */\nHotspotContainer.prototype.listHotspots = function () {\n  return [].concat(this._hotspots);\n};\n\n/**\n * Removes a hotspot from the container.\n *\n * @param {Hotspot} hotspot\n */\nHotspotContainer.prototype.destroyHotspot = function (hotspot) {\n  var i = this._hotspots.indexOf(hotspot);\n  if (i < 0) {\n    throw new Error('No such hotspot');\n  }\n  this._hotspots.splice(i, 1);\n  hotspot.destroy();\n  this.emit('hotspotsChange');\n};\n\n/**\n * Hide the container's DOM element, causing every contained {@link Hotspot} to\n * be hidden.\n */\nHotspotContainer.prototype.hide = function () {\n  if (this._visible) {\n    this._visible = false;\n    this._visibilityOrRectChanged = true;\n    this._update();\n  }\n};\n\n/**\n * Show the container's DOM element, causing every contained {@link Hotspot} to\n * be shown.\n */\nHotspotContainer.prototype.show = function () {\n  if (!this._visible) {\n    this._visible = true;\n    this._visibilityOrRectChanged = true;\n    this._update();\n  }\n};\nHotspotContainer.prototype._update = function () {\n  var wrapper = this._hotspotContainerWrapper;\n  var width = this._stage.width();\n  var height = this._stage.height();\n  var tmpRect = this._tmpRect;\n\n  // Avoid updating the wrapper DOM unless necessary.\n  if (this._visibilityOrRectChanged || this._rect && (width !== this._stageWidth || height !== this._stageHeight)) {\n    var visible = this._visible;\n    wrapper.style.display = visible ? 'block' : 'none';\n    if (visible) {\n      if (this._rect) {\n        calcRect(width, height, this._rect, tmpRect);\n        positionAbsolutely(wrapper, width * tmpRect.x, height * tmpRect.y);\n        setPixelSize(wrapper, width * tmpRect.width, height * tmpRect.height);\n        setOverflowHidden(wrapper);\n      } else {\n        positionAbsolutely(wrapper, 0, 0);\n        setNullSize(wrapper);\n        setOverflowVisible(wrapper);\n      }\n    }\n    this._stageWidth = width;\n    this._stageHeight = height;\n    this._visibilityOrRectChanged = false;\n  }\n\n  // Update hotspots unconditionally, as the view parameters may have changed.\n  for (var i = 0; i < this._hotspots.length; i++) {\n    this._hotspots[i]._update();\n  }\n};\nmodule.exports = HotspotContainer;","map":{"version":3,"names":["eventEmitter","require","Hotspot","calcRect","positionAbsolutely","setAbsolute","setOverflowHidden","setOverflowVisible","setNullSize","setPixelSize","setPointerEvents","setWithVendorPrefix","clearOwnProperties","HotspotContainer","parentDomElement","stage","view","renderLoop","opts","_parentDomElement","_stage","_view","_renderLoop","_hotspots","_visible","_rect","rect","_visibilityOrRectChanged","_stageWidth","_stageHeight","_tmpRect","_hotspotContainerWrapper","document","createElement","appendChild","_hotspotContainer","_updateHandler","_update","bind","addEventListener","prototype","destroy","length","destroyHotspot","removeChild","removeEventListener","domElement","setRect","createHotspot","coords","hotspot","push","emit","hasHotspot","indexOf","listHotspots","concat","i","Error","splice","hide","show","wrapper","width","height","tmpRect","visible","style","display","x","y","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/HotspotContainer.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Hotspot = require('./Hotspot');\nvar calcRect = require('./util/calcRect');\nvar positionAbsolutely = require('./util/positionAbsolutely');\nvar setAbsolute = require('./util/dom').setAbsolute;\nvar setOverflowHidden = require('./util/dom').setOverflowHidden;\nvar setOverflowVisible = require('./util/dom').setOverflowVisible;\nvar setNullSize = require('./util/dom').setNullSize;\nvar setPixelSize = require('./util/dom').setPixelSize;\nvar setPointerEvents = require('./util/dom').setWithVendorPrefix('pointer-events');\nvar clearOwnProperties = require('./util/clearOwnProperties');\n\n/**\n * Signals that a hotspot has been created or destroyed on the container.\n * @event HotspotContainer#hotspotsChange\n */\n\n/**\n * @class HotspotContainer\n * @classdesc\n *\n * Creates a DOM element to hold {@link Hotspot hotspots} and updates their\n * position when necessary.\n *\n * @param {Element} parentDomElement The DOM element inside which the container\n *     should be created.\n * @param {Stage} stage The underlying stage.\n * @param {View} view The view according to which the hotspots are positioned.\n * @param {RenderLoop} renderLoop The render loop indicating when the hotspots\n *     must be rendered.\n * @param {Object} opts\n * @param {RectSpec} opts.rect Rectangular region covered by the container. See\n *    {@link Effects#rect}.\n */\nfunction HotspotContainer(parentDomElement, stage, view, renderLoop, opts) {\n  opts = opts || {};\n\n  this._parentDomElement = parentDomElement;\n  this._stage = stage;\n  this._view = view;\n  this._renderLoop = renderLoop;\n\n  // Hotspot list.\n  this._hotspots = [];\n\n  // Whether the hotspot container should be visible.\n  this._visible = true;\n\n  // The current rect.\n  this._rect = opts.rect;\n\n  // Whether the visibility or the rect have changed since the last DOM update.\n  this._visibilityOrRectChanged = true;\n\n  // The last seen stage dimensions.\n  this._stageWidth = null;\n  this._stageHeight = null;\n\n  // Temporary variable to hold the calculated position and size.\n  this._tmpRect = {};\n\n  // Wrapper element. When the rect effect is set, the wrapper will have nonzero\n  // dimensions and `pointer-events: none` so that hotspots outside the rect are\n  // hidden, but no mouse events are hijacked.\n  this._hotspotContainerWrapper = document.createElement('div');\n  setAbsolute(this._hotspotContainerWrapper);\n  setPointerEvents(this._hotspotContainerWrapper, 'none');\n  this._parentDomElement.appendChild(this._hotspotContainerWrapper);\n\n  // Hotspot container element. It has zero dimensions and `pointer-events: all`\n  // to override the `pointer-events: none` on the wrapper and allow hotspots to\n  // be interacted with.\n  this._hotspotContainer = document.createElement('div');\n  setAbsolute(this._hotspotContainer);\n  setPointerEvents(this._hotspotContainer, 'all');\n  this._hotspotContainerWrapper.appendChild(this._hotspotContainer);\n\n  // Update when the hotspots change or scene is re-rendered.\n  this._updateHandler = this._update.bind(this);\n  this._renderLoop.addEventListener('afterRender', this._updateHandler);\n}\n\neventEmitter(HotspotContainer);\n\n\n/**\n * Destructor.\n */\nHotspotContainer.prototype.destroy = function() {\n  while (this._hotspots.length) {\n    this.destroyHotspot(this._hotspots[0]);\n  }\n\n  this._parentDomElement.removeChild(this._hotspotContainerWrapper);\n\n  this._renderLoop.removeEventListener('afterRender', this._updateHandler);\n\n  clearOwnProperties(this);\n};\n\n\n/**\n * @return {Element}\n */\nHotspotContainer.prototype.domElement = function() {\n  return this._hotspotContainer;\n};\n\n\n/**\n * @param {Rect} rect\n */\nHotspotContainer.prototype.setRect = function(rect) {\n  this._rect = rect;\n  this._visibilityOrRectChanged = true;\n};\n\n\n/**\n * @return {Rect}\n */\nHotspotContainer.prototype.rect = function() {\n  return this._rect;\n};\n\n\n/**\n * Creates a new hotspot in this container.\n *\n * @param {Element} domElement DOM element to use for the hotspot\n * @param {Object} coords The hotspot coordinates.\n *     Use {@link RectilinearViewCoords}` for a {@link RectilinearView} or\n *     {@link FlatViewCoords} for a {@link FlatView}.\n * @param {Object} opts Options in the same format as the `opts` argument to\n *     the {@link Hotspot} constructor.\n * @return {Hotspot}\n */\nHotspotContainer.prototype.createHotspot = function(domElement, coords, opts) {\n  coords = coords || {};\n\n  var hotspot = new Hotspot(\n      domElement, this._hotspotContainer, this._view, coords, opts);\n  this._hotspots.push(hotspot);\n  hotspot._update();\n\n  this.emit('hotspotsChange');\n\n  return hotspot;\n};\n\n\n/**\n * @param {Hotspot} hotspot\n * @return {boolean}\n */\nHotspotContainer.prototype.hasHotspot = function(hotspot) {\n  return this._hotspots.indexOf(hotspot) >= 0;\n};\n\n\n/**\n * @return {Hotspot[]}\n */\nHotspotContainer.prototype.listHotspots = function() {\n  return [].concat(this._hotspots);\n};\n\n\n/**\n * Removes a hotspot from the container.\n *\n * @param {Hotspot} hotspot\n */\nHotspotContainer.prototype.destroyHotspot = function(hotspot) {\n  var i = this._hotspots.indexOf(hotspot);\n  if (i < 0) {\n    throw new Error('No such hotspot');\n  }\n  this._hotspots.splice(i, 1);\n\n  hotspot.destroy();\n  this.emit('hotspotsChange');\n};\n\n\n/**\n * Hide the container's DOM element, causing every contained {@link Hotspot} to\n * be hidden.\n */\nHotspotContainer.prototype.hide = function() {\n  if (this._visible) {\n    this._visible = false;\n    this._visibilityOrRectChanged = true;\n    this._update();\n  }\n};\n\n\n/**\n * Show the container's DOM element, causing every contained {@link Hotspot} to\n * be shown.\n */\nHotspotContainer.prototype.show = function() {\n  if (!this._visible) {\n    this._visible = true;\n    this._visibilityOrRectChanged = true;\n    this._update();\n  }\n};\n\n\nHotspotContainer.prototype._update = function() {\n  var wrapper = this._hotspotContainerWrapper;\n  var width = this._stage.width();\n  var height = this._stage.height();\n  var tmpRect = this._tmpRect;\n\n  // Avoid updating the wrapper DOM unless necessary.\n  if (this._visibilityOrRectChanged ||\n      (this._rect && (width !== this._stageWidth || height !== this._stageHeight))) {\n    var visible = this._visible;\n    wrapper.style.display = visible ? 'block' : 'none';\n\n    if (visible) {\n      if (this._rect) {\n        calcRect(width, height, this._rect, tmpRect);\n        positionAbsolutely(wrapper, width * tmpRect.x, height * tmpRect.y);\n        setPixelSize(wrapper, width * tmpRect.width, height * tmpRect.height);\n        setOverflowHidden(wrapper);\n      } else {\n        positionAbsolutely(wrapper, 0, 0);\n        setNullSize(wrapper);\n        setOverflowVisible(wrapper);\n      }\n    }\n\n    this._stageWidth = width;\n    this._stageHeight = height;\n    this._visibilityOrRectChanged = false;\n  }\n\n  // Update hotspots unconditionally, as the view parameters may have changed.\n  for (var i = 0; i < this._hotspots.length; i++) {\n    this._hotspots[i]._update();\n  }\n};\n\n\nmodule.exports = HotspotContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}