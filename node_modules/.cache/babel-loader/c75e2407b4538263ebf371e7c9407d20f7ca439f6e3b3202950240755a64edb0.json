{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar Layer = require('./Layer');\nvar TextureStore = require('./TextureStore');\nvar HotspotContainer = require('./HotspotContainer');\nvar eventEmitter = require('minimal-event-emitter');\nvar now = require('./util/now');\nvar noop = require('./util/noop');\nvar type = require('./util/type');\nvar defaults = require('./util/defaults');\nvar clearOwnProperties = require('./util/clearOwnProperties');\n\n/**\n * Signals that the scene's view has changed. See {@link View#event:change}.\n * @event Scene#viewChange\n */\n\n/**\n * Signals that the scene's layers have changed.\n * @event Scene#layerChange\n */\n\n/**\n * @class Scene\n * @classdesc\n *\n * A Scene is a stack of {@link Layer layers} sharing the same {@link View view}\n * and {@link HotspotContainer hotspot container}. It belongs to the\n * {@link Viewer viewer} inside which it is displayed.\n *\n * Clients should call {@link Viewer#createScene} instead of invoking the\n * constructor directly.\n *\n * @param {Viewer} viewer The viewer this scene belongs to.\n * @param {View} view The scene's underlying view.\n */\nfunction Scene(viewer, view) {\n  this._viewer = viewer;\n  this._view = view;\n  this._layers = [];\n\n  // Hotspot container. Assume it occupies a full rect.\n  this._hotspotContainer = new HotspotContainer(viewer._controlContainer, viewer.stage(), this._view, viewer.renderLoop());\n\n  // The current movement.\n  this._movement = null;\n  this._movementStartTime = null;\n  this._movementStep = null;\n  this._movementParams = null;\n  this._movementCallback = null;\n\n  // Event listener for updating the view according to the current movement.\n  // The listener is set/unset on the render loop when a movement starts/stops.\n  this._updateMovementHandler = this._updateMovement.bind(this);\n\n  // Show or hide hotspots when scene changes.\n  this._updateHotspotContainerHandler = this._updateHotspotContainer.bind(this);\n  this._viewer.addEventListener('sceneChange', this._updateHotspotContainerHandler);\n\n  // Emit event when view changes.\n  this._viewChangeHandler = this.emit.bind(this, 'viewChange');\n  this._view.addEventListener('change', this._viewChangeHandler);\n\n  // Update the hotspot container.\n  this._updateHotspotContainer();\n}\neventEmitter(Scene);\n\n/**\n * Destructor. Clients should call {@link Viewer#destroyScene} instead.\n */\nScene.prototype.destroy = function () {\n  this._view.removeEventListener('change', this._viewChangeHandler);\n  this._viewer.removeEventListener('sceneChange', this._updateHotspotContainerHandler);\n  if (this._movement) {\n    this.stopMovement();\n  }\n  this._hotspotContainer.destroy();\n  this.destroyAllLayers();\n  clearOwnProperties(this);\n};\n\n/**\n * Returns the {@link HotspotContainer hotspot container} for the scene.\n * @return {Layer}\n */\nScene.prototype.hotspotContainer = function () {\n  return this._hotspotContainer;\n};\n\n/**\n * Returns the first of the {@link Layer layers} belonging to the scene, or\n * null if the scene has no layers.\n *\n * This method is equivalent to `Scene#listLayers[0]`. It may be removed in the\n * future.\n *\n * @return {Layer}\n */\nScene.prototype.layer = function () {\n  return this._layers[0];\n};\n\n/**\n* Returns a list of all {@link Layer layers} belonging to the scene. The\n* returned list is in display order, background to foreground.\n* @return {Layer[]}\n */\nScene.prototype.listLayers = function () {\n  return [].concat(this._layers);\n};\n\n/**\n * Returns the scene's underlying {@link View view}.\n * @return {View}\n */\nScene.prototype.view = function () {\n  return this._view;\n};\n\n/**\n * Returns the {@link Viewer viewer} the scene belongs to.\n * @return {Viewer}\n */\nScene.prototype.viewer = function () {\n  return this._viewer;\n};\n\n/**\n * Returns whether the scene is currently visible.\n * @return {boolean}\n */\nScene.prototype.visible = function () {\n  return this._viewer.scene() === this;\n};\n\n/**\n * Creates a new {@link Layer layer} and adds it into the scene in the\n * foreground position.\n *\n * @param {Object} opts Layer creation options.\n * @param {Source} opts.source The layer's underlying {@link Source}.\n * @param {Source} opts.geometry The layer's underlying {@link Geometry}.\n * @param {boolean} [opts.pinFirstLevel=false] Whether to pin the first level to\n *     provide a fallback of last resort, at the cost of memory consumption.\n * @param {Object} [opts.textureStoreOpts={}] Options to pass to the\n *     {@link TextureStore} constructor.\n * @param {Object} [opts.layerOpts={}] Options to pass to the {@link Layer}\n *     constructor.\n * @return {Layer}\n */\nScene.prototype.createLayer = function (opts) {\n  opts = opts || {};\n  var textureStoreOpts = opts.textureStoreOpts || {};\n  var layerOpts = opts.layerOpts || {};\n  var source = opts.source;\n  var geometry = opts.geometry;\n  var view = this._view;\n  var stage = this._viewer.stage();\n  var textureStore = new TextureStore(source, stage, textureStoreOpts);\n  var layer = new Layer(source, geometry, view, textureStore, layerOpts);\n  this._layers.push(layer);\n  if (opts.pinFirstLevel) {\n    layer.pinFirstLevel();\n  }\n\n  // Signal that the layers have changed.\n  this.emit('layerChange');\n  return layer;\n};\n\n/**\n * Destroys a {@link Layer layer} and removes it from the scene.\n * @param {Layer} layer\n * @throws An error if the layer does not belong to the scene.\n */\nScene.prototype.destroyLayer = function (layer) {\n  var i = this._layers.indexOf(layer);\n  if (i < 0) {\n    throw new Error('No such layer in scene');\n  }\n  this._layers.splice(i, 1);\n\n  // Signal that the layers have changed.\n  this.emit('layerChange');\n  layer.textureStore().destroy();\n  layer.destroy();\n};\n\n/**\n * Destroys all {@link Layer layers} and removes them from the scene.\n */\nScene.prototype.destroyAllLayers = function () {\n  while (this._layers.length > 0) {\n    this.destroyLayer(this._layers[0]);\n  }\n};\n\n/**\n * Switches to the scene.\n *\n * This is equivalent to calling {@link Viewer#switchScene} on this scene.\n *\n * @param {Object} opts Options to pass into {@link Viewer#switchScene}.\n * @param {function} done Function to call when the switch is complete.\n */\nScene.prototype.switchTo = function (opts, done) {\n  return this._viewer.switchScene(this, opts, done);\n};\n\n/**\n * Tweens the scene's underlying {@link View view}.\n *\n * @param {Object} params Target view parameters.\n * @param {Object} opts Transition options.\n * @param {function} [opts.ease=easeInOutQuad] Tween easing function\n * @param {number} [opts.controlsInterrupt=false] allow controls to interrupt\n *     an ongoing tween.\n * @param {number} [opts.transitionDuration=1000] Tween duration, in\n *     milliseconds.\n * @param {number} [opts.closest=true] Whether to tween through the shortest\n *    path between the initial and final view parameters. This requires\n *    {@link View#normalizeToClosest} to be implemented, and does nothing\n *    otherwise.\n * @param {function} done Function to call when the tween finishes or is\n *    interrupted.\n */\nScene.prototype.lookTo = function (params, opts, done) {\n  var self = this;\n  opts = opts || {};\n  done = done || noop;\n  if (type(params) !== 'object') {\n    throw new Error(\"Target view parameters must be an object\");\n  }\n\n  // Quadratic in/out easing.\n  var easeInOutQuad = function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n    return -0.5 * (--k * (k - 2) - 1);\n  };\n  var ease = opts.ease != null ? opts.ease : easeInOutQuad;\n  var controlsInterrupt = opts.controlsInterrupt != null ? opts.controlsInterrupt : false;\n  var duration = opts.transitionDuration != null ? opts.transitionDuration : 1000;\n  var shortest = opts.shortest != null ? opts.shortest : true;\n  var view = this._view;\n  var initialParams = view.parameters();\n  var finalParams = {};\n  defaults(finalParams, params);\n  defaults(finalParams, initialParams);\n\n  // Tween through the shortest path if requested.\n  // The view must implement the normalizeToClosest() method.\n  if (shortest && view.normalizeToClosest) {\n    view.normalizeToClosest(finalParams, finalParams);\n  }\n  var movement = function () {\n    var finalUpdate = false;\n    return function (params, elapsed) {\n      if (elapsed >= duration && finalUpdate) {\n        return null;\n      }\n      var delta = Math.min(elapsed / duration, 1);\n      for (var param in params) {\n        var start = initialParams[param];\n        var end = finalParams[param];\n        params[param] = start + ease(delta) * (end - start);\n      }\n      finalUpdate = elapsed >= duration;\n      return params;\n    };\n  };\n  var reenableControls = this._viewer.controls().enabled();\n  if (!controlsInterrupt) {\n    this._viewer.controls().disable();\n  }\n  this.startMovement(movement, function () {\n    if (reenableControls) {\n      self._viewer.controls().enable();\n    }\n    done();\n  });\n};\n\n/**\n * Starts a movement, possibly replacing the current movement.\n *\n * @param {function} fn The movement function.\n * @param {function} done Function to be called when the movement finishes or is\n *     interrupted.\n */\nScene.prototype.startMovement = function (fn, done) {\n  var renderLoop = this._viewer.renderLoop();\n  if (this._movement) {\n    this.stopMovement();\n  }\n  var step = fn();\n  if (typeof step !== 'function') {\n    throw new Error('Bad movement');\n  }\n  this._movement = fn;\n  this._movementStep = step;\n  this._movementStartTime = now();\n  this._movementParams = {};\n  this._movementCallback = done;\n  renderLoop.addEventListener('beforeRender', this._updateMovementHandler);\n  renderLoop.renderOnNextFrame();\n};\n\n/**\n * Stops the current movement.\n */\nScene.prototype.stopMovement = function () {\n  var done = this._movementCallback;\n  var renderLoop = this._viewer.renderLoop();\n  if (!this._movement) {\n    return;\n  }\n\n  // Clear state before calling done, to prevent an infinite loop when the\n  // callback starts a new movement.\n  this._movement = null;\n  this._movementStep = null;\n  this._movementStartTime = null;\n  this._movementParams = null;\n  this._movementCallback = null;\n  renderLoop.removeEventListener('beforeRender', this._updateMovementHandler);\n  if (done) {\n    done();\n  }\n};\n\n/**\n * Returns the current movement.\n * @return {function}\n */\nScene.prototype.movement = function () {\n  return this._movement;\n};\nScene.prototype._updateMovement = function () {\n  if (!this._movement) {\n    throw new Error('Should not call update');\n  }\n  var renderLoop = this._viewer.renderLoop();\n  var view = this._view;\n  var elapsed = now() - this._movementStartTime;\n  var step = this._movementStep;\n  var params = this._movementParams;\n  params = view.parameters(params);\n  params = step(params, elapsed);\n  if (params == null) {\n    this.stopMovement();\n  } else {\n    view.setParameters(params);\n    renderLoop.renderOnNextFrame();\n  }\n};\nScene.prototype._updateHotspotContainer = function () {\n  if (this.visible()) {\n    this._hotspotContainer.show();\n  } else {\n    this._hotspotContainer.hide();\n  }\n};\nmodule.exports = Scene;","map":{"version":3,"names":["Layer","require","TextureStore","HotspotContainer","eventEmitter","now","noop","type","defaults","clearOwnProperties","Scene","viewer","view","_viewer","_view","_layers","_hotspotContainer","_controlContainer","stage","renderLoop","_movement","_movementStartTime","_movementStep","_movementParams","_movementCallback","_updateMovementHandler","_updateMovement","bind","_updateHotspotContainerHandler","_updateHotspotContainer","addEventListener","_viewChangeHandler","emit","prototype","destroy","removeEventListener","stopMovement","destroyAllLayers","hotspotContainer","layer","listLayers","concat","visible","scene","createLayer","opts","textureStoreOpts","layerOpts","source","geometry","textureStore","push","pinFirstLevel","destroyLayer","i","indexOf","Error","splice","length","switchTo","done","switchScene","lookTo","params","self","easeInOutQuad","k","ease","controlsInterrupt","duration","transitionDuration","shortest","initialParams","parameters","finalParams","normalizeToClosest","movement","finalUpdate","elapsed","delta","Math","min","param","start","end","reenableControls","controls","enabled","disable","startMovement","enable","fn","step","renderOnNextFrame","setParameters","show","hide","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/Scene.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar Layer = require('./Layer');\nvar TextureStore = require('./TextureStore');\nvar HotspotContainer = require('./HotspotContainer');\nvar eventEmitter = require('minimal-event-emitter');\nvar now = require('./util/now');\nvar noop = require('./util/noop');\nvar type = require('./util/type');\nvar defaults = require('./util/defaults');\nvar clearOwnProperties = require('./util/clearOwnProperties');\n\n/**\n * Signals that the scene's view has changed. See {@link View#event:change}.\n * @event Scene#viewChange\n */\n\n/**\n * Signals that the scene's layers have changed.\n * @event Scene#layerChange\n */\n\n/**\n * @class Scene\n * @classdesc\n *\n * A Scene is a stack of {@link Layer layers} sharing the same {@link View view}\n * and {@link HotspotContainer hotspot container}. It belongs to the\n * {@link Viewer viewer} inside which it is displayed.\n *\n * Clients should call {@link Viewer#createScene} instead of invoking the\n * constructor directly.\n *\n * @param {Viewer} viewer The viewer this scene belongs to.\n * @param {View} view The scene's underlying view.\n */\nfunction Scene(viewer, view) {\n  this._viewer = viewer;\n  this._view = view;\n  this._layers = [];\n\n  // Hotspot container. Assume it occupies a full rect.\n  this._hotspotContainer = new HotspotContainer(\n    viewer._controlContainer,\n    viewer.stage(),\n    this._view,\n    viewer.renderLoop());\n\n  // The current movement.\n  this._movement = null;\n  this._movementStartTime = null;\n  this._movementStep = null;\n  this._movementParams = null;\n  this._movementCallback = null;\n\n  // Event listener for updating the view according to the current movement.\n  // The listener is set/unset on the render loop when a movement starts/stops.\n  this._updateMovementHandler = this._updateMovement.bind(this);\n\n  // Show or hide hotspots when scene changes.\n  this._updateHotspotContainerHandler = this._updateHotspotContainer.bind(this);\n  this._viewer.addEventListener('sceneChange', this._updateHotspotContainerHandler);\n\n  // Emit event when view changes.\n  this._viewChangeHandler = this.emit.bind(this, 'viewChange');\n  this._view.addEventListener('change', this._viewChangeHandler);\n\n  // Update the hotspot container.\n  this._updateHotspotContainer();\n}\n\neventEmitter(Scene);\n\n\n/**\n * Destructor. Clients should call {@link Viewer#destroyScene} instead.\n */\nScene.prototype.destroy = function() {\n  this._view.removeEventListener('change', this._viewChangeHandler);\n  this._viewer.removeEventListener('sceneChange', this._updateHotspotContainerHandler);\n\n  if (this._movement) {\n    this.stopMovement();\n  }\n\n  this._hotspotContainer.destroy();\n\n  this.destroyAllLayers();\n\n  clearOwnProperties(this);\n};\n\n\n\n/**\n * Returns the {@link HotspotContainer hotspot container} for the scene.\n * @return {Layer}\n */\nScene.prototype.hotspotContainer = function() {\n  return this._hotspotContainer;\n};\n\n/**\n * Returns the first of the {@link Layer layers} belonging to the scene, or\n * null if the scene has no layers.\n *\n * This method is equivalent to `Scene#listLayers[0]`. It may be removed in the\n * future.\n *\n * @return {Layer}\n */\nScene.prototype.layer = function() {\n  return this._layers[0];\n};\n\n/**\n* Returns a list of all {@link Layer layers} belonging to the scene. The\n* returned list is in display order, background to foreground.\n* @return {Layer[]}\n */\nScene.prototype.listLayers = function() {\n  return [].concat(this._layers);\n};\n\n\n/**\n * Returns the scene's underlying {@link View view}.\n * @return {View}\n */\nScene.prototype.view = function() {\n  return this._view;\n};\n\n\n/**\n * Returns the {@link Viewer viewer} the scene belongs to.\n * @return {Viewer}\n */\nScene.prototype.viewer = function() {\n  return this._viewer;\n};\n\n\n/**\n * Returns whether the scene is currently visible.\n * @return {boolean}\n */\nScene.prototype.visible = function() {\n  return this._viewer.scene() === this;\n};\n\n\n/**\n * Creates a new {@link Layer layer} and adds it into the scene in the\n * foreground position.\n *\n * @param {Object} opts Layer creation options.\n * @param {Source} opts.source The layer's underlying {@link Source}.\n * @param {Source} opts.geometry The layer's underlying {@link Geometry}.\n * @param {boolean} [opts.pinFirstLevel=false] Whether to pin the first level to\n *     provide a fallback of last resort, at the cost of memory consumption.\n * @param {Object} [opts.textureStoreOpts={}] Options to pass to the\n *     {@link TextureStore} constructor.\n * @param {Object} [opts.layerOpts={}] Options to pass to the {@link Layer}\n *     constructor.\n * @return {Layer}\n */\nScene.prototype.createLayer = function(opts) {\n  opts = opts || {};\n\n  var textureStoreOpts = opts.textureStoreOpts || {};\n  var layerOpts = opts.layerOpts || {};\n\n  var source = opts.source;\n  var geometry = opts.geometry;\n  var view = this._view;\n  var stage = this._viewer.stage();\n  var textureStore = new TextureStore(source, stage, textureStoreOpts);\n  var layer = new Layer(source, geometry, view, textureStore, layerOpts);\n\n  this._layers.push(layer);\n\n  if (opts.pinFirstLevel) {\n    layer.pinFirstLevel();\n  }\n\n  // Signal that the layers have changed.\n  this.emit('layerChange');\n\n  return layer;\n};\n\n\n/**\n * Destroys a {@link Layer layer} and removes it from the scene.\n * @param {Layer} layer\n * @throws An error if the layer does not belong to the scene.\n */\nScene.prototype.destroyLayer = function(layer) {\n  var i = this._layers.indexOf(layer);\n  if (i < 0) {\n    throw new Error('No such layer in scene');\n  }\n\n  this._layers.splice(i, 1);\n\n  // Signal that the layers have changed.\n  this.emit('layerChange');\n\n  layer.textureStore().destroy();\n  layer.destroy();\n};\n\n\n/**\n * Destroys all {@link Layer layers} and removes them from the scene.\n */\nScene.prototype.destroyAllLayers = function() {\n  while (this._layers.length > 0) {\n    this.destroyLayer(this._layers[0]);\n  }\n};\n\n\n/**\n * Switches to the scene.\n *\n * This is equivalent to calling {@link Viewer#switchScene} on this scene.\n *\n * @param {Object} opts Options to pass into {@link Viewer#switchScene}.\n * @param {function} done Function to call when the switch is complete.\n */\nScene.prototype.switchTo = function(opts, done) {\n  return this._viewer.switchScene(this, opts, done);\n};\n\n\n/**\n * Tweens the scene's underlying {@link View view}.\n *\n * @param {Object} params Target view parameters.\n * @param {Object} opts Transition options.\n * @param {function} [opts.ease=easeInOutQuad] Tween easing function\n * @param {number} [opts.controlsInterrupt=false] allow controls to interrupt\n *     an ongoing tween.\n * @param {number} [opts.transitionDuration=1000] Tween duration, in\n *     milliseconds.\n * @param {number} [opts.closest=true] Whether to tween through the shortest\n *    path between the initial and final view parameters. This requires\n *    {@link View#normalizeToClosest} to be implemented, and does nothing\n *    otherwise.\n * @param {function} done Function to call when the tween finishes or is\n *    interrupted.\n */\nScene.prototype.lookTo = function(params, opts, done) {\n  var self = this;\n\n  opts = opts || {};\n  done = done || noop;\n\n  if (type(params) !== 'object') {\n    throw new Error(\"Target view parameters must be an object\");\n  }\n\n  // Quadratic in/out easing.\n  var easeInOutQuad = function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n    return -0.5 * (--k * (k - 2) - 1);\n  };\n\n  var ease = opts.ease != null ? opts.ease : easeInOutQuad;\n  var controlsInterrupt = opts.controlsInterrupt != null ? opts.controlsInterrupt : false;\n  var duration = opts.transitionDuration != null ? opts.transitionDuration : 1000;\n  var shortest = opts.shortest != null ? opts.shortest : true;\n\n  var view = this._view;\n\n  var initialParams = view.parameters();\n\n  var finalParams = {};\n  defaults(finalParams, params);\n  defaults(finalParams, initialParams);\n\n  // Tween through the shortest path if requested.\n  // The view must implement the normalizeToClosest() method.\n  if (shortest && view.normalizeToClosest) {\n    view.normalizeToClosest(finalParams, finalParams);\n  }\n\n  var movement = function() {\n\n    var finalUpdate = false;\n\n    return function(params, elapsed) {\n\n      if (elapsed >= duration && finalUpdate) {\n        return null;\n      }\n\n      var delta = Math.min(elapsed / duration, 1);\n\n      for (var param in params) {\n        var start = initialParams[param];\n        var end = finalParams[param];\n        params[param] = start + ease(delta) * (end - start);\n      }\n\n      finalUpdate = elapsed >= duration;\n\n      return params;\n\n    };\n  };\n\n  var reenableControls = this._viewer.controls().enabled();\n\n  if (!controlsInterrupt) {\n    this._viewer.controls().disable();\n  }\n\n  this.startMovement(movement, function() {\n    if (reenableControls) {\n      self._viewer.controls().enable();\n    }\n    done();\n  });\n\n};\n\n\n/**\n * Starts a movement, possibly replacing the current movement.\n *\n * @param {function} fn The movement function.\n * @param {function} done Function to be called when the movement finishes or is\n *     interrupted.\n */\nScene.prototype.startMovement = function(fn, done) {\n\n  var renderLoop = this._viewer.renderLoop();\n\n  if (this._movement) {\n    this.stopMovement();\n  }\n\n  var step = fn();\n  if (typeof step !== 'function') {\n    throw new Error('Bad movement');\n  }\n\n  this._movement = fn;\n  this._movementStep = step;\n  this._movementStartTime = now();\n  this._movementParams = {};\n  this._movementCallback = done;\n\n  renderLoop.addEventListener('beforeRender', this._updateMovementHandler);\n  renderLoop.renderOnNextFrame();\n};\n\n\n/**\n * Stops the current movement.\n */\nScene.prototype.stopMovement = function() {\n\n  var done = this._movementCallback;\n  var renderLoop = this._viewer.renderLoop();\n\n  if (!this._movement) {\n    return;\n  }\n\n  // Clear state before calling done, to prevent an infinite loop when the\n  // callback starts a new movement.\n  this._movement = null;\n  this._movementStep = null;\n  this._movementStartTime = null;\n  this._movementParams = null;\n  this._movementCallback = null;\n\n  renderLoop.removeEventListener('beforeRender', this._updateMovementHandler);\n\n  if (done) {\n    done();\n  }\n};\n\n\n/**\n * Returns the current movement.\n * @return {function}\n */\nScene.prototype.movement = function() {\n  return this._movement;\n};\n\n\nScene.prototype._updateMovement = function() {\n\n  if (!this._movement) {\n    throw new Error('Should not call update');\n  }\n\n  var renderLoop = this._viewer.renderLoop();\n  var view = this._view;\n\n  var elapsed = now() - this._movementStartTime;\n  var step = this._movementStep;\n  var params = this._movementParams;\n\n  params = view.parameters(params);\n  params = step(params, elapsed);\n  if (params == null) {\n    this.stopMovement();\n  } else {\n    view.setParameters(params);\n    renderLoop.renderOnNextFrame();\n  }\n\n};\n\n\nScene.prototype._updateHotspotContainer = function() {\n  if (this.visible()) {\n    this._hotspotContainer.show();\n  } else {\n    this._hotspotContainer.hide();\n  }\n};\n\n\nmodule.exports = Scene;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AACpD,IAAIG,YAAY,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AACnD,IAAII,GAAG,GAAGJ,OAAO,CAAC,YAAY,CAAC;AAC/B,IAAIK,IAAI,GAAGL,OAAO,CAAC,aAAa,CAAC;AACjC,IAAIM,IAAI,GAAGN,OAAO,CAAC,aAAa,CAAC;AACjC,IAAIO,QAAQ,GAAGP,OAAO,CAAC,iBAAiB,CAAC;AACzC,IAAIQ,kBAAkB,GAAGR,OAAO,CAAC,2BAA2B,CAAC;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,KAAKA,CAACC,MAAM,EAAEC,IAAI,EAAE;EAC3B,IAAI,CAACC,OAAO,GAAGF,MAAM;EACrB,IAAI,CAACG,KAAK,GAAGF,IAAI;EACjB,IAAI,CAACG,OAAO,GAAG,EAAE;;EAEjB;EACA,IAAI,CAACC,iBAAiB,GAAG,IAAIb,gBAAgB,CAC3CQ,MAAM,CAACM,iBAAiB,EACxBN,MAAM,CAACO,KAAK,CAAC,CAAC,EACd,IAAI,CAACJ,KAAK,EACVH,MAAM,CAACQ,UAAU,CAAC,CAAC,CAAC;;EAEtB;EACA,IAAI,CAACC,SAAS,GAAG,IAAI;EACrB,IAAI,CAACC,kBAAkB,GAAG,IAAI;EAC9B,IAAI,CAACC,aAAa,GAAG,IAAI;EACzB,IAAI,CAACC,eAAe,GAAG,IAAI;EAC3B,IAAI,CAACC,iBAAiB,GAAG,IAAI;;EAE7B;EACA;EACA,IAAI,CAACC,sBAAsB,GAAG,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;;EAE7D;EACA,IAAI,CAACC,8BAA8B,GAAG,IAAI,CAACC,uBAAuB,CAACF,IAAI,CAAC,IAAI,CAAC;EAC7E,IAAI,CAACd,OAAO,CAACiB,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAACF,8BAA8B,CAAC;;EAEjF;EACA,IAAI,CAACG,kBAAkB,GAAG,IAAI,CAACC,IAAI,CAACL,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;EAC5D,IAAI,CAACb,KAAK,CAACgB,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,kBAAkB,CAAC;;EAE9D;EACA,IAAI,CAACF,uBAAuB,CAAC,CAAC;AAChC;AAEAzB,YAAY,CAACM,KAAK,CAAC;;AAGnB;AACA;AACA;AACAA,KAAK,CAACuB,SAAS,CAACC,OAAO,GAAG,YAAW;EACnC,IAAI,CAACpB,KAAK,CAACqB,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACJ,kBAAkB,CAAC;EACjE,IAAI,CAAClB,OAAO,CAACsB,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAACP,8BAA8B,CAAC;EAEpF,IAAI,IAAI,CAACR,SAAS,EAAE;IAClB,IAAI,CAACgB,YAAY,CAAC,CAAC;EACrB;EAEA,IAAI,CAACpB,iBAAiB,CAACkB,OAAO,CAAC,CAAC;EAEhC,IAAI,CAACG,gBAAgB,CAAC,CAAC;EAEvB5B,kBAAkB,CAAC,IAAI,CAAC;AAC1B,CAAC;;AAID;AACA;AACA;AACA;AACAC,KAAK,CAACuB,SAAS,CAACK,gBAAgB,GAAG,YAAW;EAC5C,OAAO,IAAI,CAACtB,iBAAiB;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,KAAK,CAACuB,SAAS,CAACM,KAAK,GAAG,YAAW;EACjC,OAAO,IAAI,CAACxB,OAAO,CAAC,CAAC,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAL,KAAK,CAACuB,SAAS,CAACO,UAAU,GAAG,YAAW;EACtC,OAAO,EAAE,CAACC,MAAM,CAAC,IAAI,CAAC1B,OAAO,CAAC;AAChC,CAAC;;AAGD;AACA;AACA;AACA;AACAL,KAAK,CAACuB,SAAS,CAACrB,IAAI,GAAG,YAAW;EAChC,OAAO,IAAI,CAACE,KAAK;AACnB,CAAC;;AAGD;AACA;AACA;AACA;AACAJ,KAAK,CAACuB,SAAS,CAACtB,MAAM,GAAG,YAAW;EAClC,OAAO,IAAI,CAACE,OAAO;AACrB,CAAC;;AAGD;AACA;AACA;AACA;AACAH,KAAK,CAACuB,SAAS,CAACS,OAAO,GAAG,YAAW;EACnC,OAAO,IAAI,CAAC7B,OAAO,CAAC8B,KAAK,CAAC,CAAC,KAAK,IAAI;AACtC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjC,KAAK,CAACuB,SAAS,CAACW,WAAW,GAAG,UAASC,IAAI,EAAE;EAC3CA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EAEjB,IAAIC,gBAAgB,GAAGD,IAAI,CAACC,gBAAgB,IAAI,CAAC,CAAC;EAClD,IAAIC,SAAS,GAAGF,IAAI,CAACE,SAAS,IAAI,CAAC,CAAC;EAEpC,IAAIC,MAAM,GAAGH,IAAI,CAACG,MAAM;EACxB,IAAIC,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;EAC5B,IAAIrC,IAAI,GAAG,IAAI,CAACE,KAAK;EACrB,IAAII,KAAK,GAAG,IAAI,CAACL,OAAO,CAACK,KAAK,CAAC,CAAC;EAChC,IAAIgC,YAAY,GAAG,IAAIhD,YAAY,CAAC8C,MAAM,EAAE9B,KAAK,EAAE4B,gBAAgB,CAAC;EACpE,IAAIP,KAAK,GAAG,IAAIvC,KAAK,CAACgD,MAAM,EAAEC,QAAQ,EAAErC,IAAI,EAAEsC,YAAY,EAAEH,SAAS,CAAC;EAEtE,IAAI,CAAChC,OAAO,CAACoC,IAAI,CAACZ,KAAK,CAAC;EAExB,IAAIM,IAAI,CAACO,aAAa,EAAE;IACtBb,KAAK,CAACa,aAAa,CAAC,CAAC;EACvB;;EAEA;EACA,IAAI,CAACpB,IAAI,CAAC,aAAa,CAAC;EAExB,OAAOO,KAAK;AACd,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACuB,SAAS,CAACoB,YAAY,GAAG,UAASd,KAAK,EAAE;EAC7C,IAAIe,CAAC,GAAG,IAAI,CAACvC,OAAO,CAACwC,OAAO,CAAChB,KAAK,CAAC;EACnC,IAAIe,CAAC,GAAG,CAAC,EAAE;IACT,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EAEA,IAAI,CAACzC,OAAO,CAAC0C,MAAM,CAACH,CAAC,EAAE,CAAC,CAAC;;EAEzB;EACA,IAAI,CAACtB,IAAI,CAAC,aAAa,CAAC;EAExBO,KAAK,CAACW,YAAY,CAAC,CAAC,CAAChB,OAAO,CAAC,CAAC;EAC9BK,KAAK,CAACL,OAAO,CAAC,CAAC;AACjB,CAAC;;AAGD;AACA;AACA;AACAxB,KAAK,CAACuB,SAAS,CAACI,gBAAgB,GAAG,YAAW;EAC5C,OAAO,IAAI,CAACtB,OAAO,CAAC2C,MAAM,GAAG,CAAC,EAAE;IAC9B,IAAI,CAACL,YAAY,CAAC,IAAI,CAACtC,OAAO,CAAC,CAAC,CAAC,CAAC;EACpC;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,KAAK,CAACuB,SAAS,CAAC0B,QAAQ,GAAG,UAASd,IAAI,EAAEe,IAAI,EAAE;EAC9C,OAAO,IAAI,CAAC/C,OAAO,CAACgD,WAAW,CAAC,IAAI,EAAEhB,IAAI,EAAEe,IAAI,CAAC;AACnD,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlD,KAAK,CAACuB,SAAS,CAAC6B,MAAM,GAAG,UAASC,MAAM,EAAElB,IAAI,EAAEe,IAAI,EAAE;EACpD,IAAII,IAAI,GAAG,IAAI;EAEfnB,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EACjBe,IAAI,GAAGA,IAAI,IAAItD,IAAI;EAEnB,IAAIC,IAAI,CAACwD,MAAM,CAAC,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAIP,KAAK,CAAC,0CAA0C,CAAC;EAC7D;;EAEA;EACA,IAAIS,aAAa,GAAG,SAAAA,CAAUC,CAAC,EAAE;IAC/B,IAAI,CAACA,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;MAChB,OAAO,GAAG,GAAGA,CAAC,GAAGA,CAAC;IACpB;IACA,OAAO,CAAC,GAAG,IAAI,EAAEA,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,IAAIC,IAAI,GAAGtB,IAAI,CAACsB,IAAI,IAAI,IAAI,GAAGtB,IAAI,CAACsB,IAAI,GAAGF,aAAa;EACxD,IAAIG,iBAAiB,GAAGvB,IAAI,CAACuB,iBAAiB,IAAI,IAAI,GAAGvB,IAAI,CAACuB,iBAAiB,GAAG,KAAK;EACvF,IAAIC,QAAQ,GAAGxB,IAAI,CAACyB,kBAAkB,IAAI,IAAI,GAAGzB,IAAI,CAACyB,kBAAkB,GAAG,IAAI;EAC/E,IAAIC,QAAQ,GAAG1B,IAAI,CAAC0B,QAAQ,IAAI,IAAI,GAAG1B,IAAI,CAAC0B,QAAQ,GAAG,IAAI;EAE3D,IAAI3D,IAAI,GAAG,IAAI,CAACE,KAAK;EAErB,IAAI0D,aAAa,GAAG5D,IAAI,CAAC6D,UAAU,CAAC,CAAC;EAErC,IAAIC,WAAW,GAAG,CAAC,CAAC;EACpBlE,QAAQ,CAACkE,WAAW,EAAEX,MAAM,CAAC;EAC7BvD,QAAQ,CAACkE,WAAW,EAAEF,aAAa,CAAC;;EAEpC;EACA;EACA,IAAID,QAAQ,IAAI3D,IAAI,CAAC+D,kBAAkB,EAAE;IACvC/D,IAAI,CAAC+D,kBAAkB,CAACD,WAAW,EAAEA,WAAW,CAAC;EACnD;EAEA,IAAIE,QAAQ,GAAG,SAAAA,CAAA,EAAW;IAExB,IAAIC,WAAW,GAAG,KAAK;IAEvB,OAAO,UAASd,MAAM,EAAEe,OAAO,EAAE;MAE/B,IAAIA,OAAO,IAAIT,QAAQ,IAAIQ,WAAW,EAAE;QACtC,OAAO,IAAI;MACb;MAEA,IAAIE,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACH,OAAO,GAAGT,QAAQ,EAAE,CAAC,CAAC;MAE3C,KAAK,IAAIa,KAAK,IAAInB,MAAM,EAAE;QACxB,IAAIoB,KAAK,GAAGX,aAAa,CAACU,KAAK,CAAC;QAChC,IAAIE,GAAG,GAAGV,WAAW,CAACQ,KAAK,CAAC;QAC5BnB,MAAM,CAACmB,KAAK,CAAC,GAAGC,KAAK,GAAGhB,IAAI,CAACY,KAAK,CAAC,IAAIK,GAAG,GAAGD,KAAK,CAAC;MACrD;MAEAN,WAAW,GAAGC,OAAO,IAAIT,QAAQ;MAEjC,OAAON,MAAM;IAEf,CAAC;EACH,CAAC;EAED,IAAIsB,gBAAgB,GAAG,IAAI,CAACxE,OAAO,CAACyE,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAExD,IAAI,CAACnB,iBAAiB,EAAE;IACtB,IAAI,CAACvD,OAAO,CAACyE,QAAQ,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;EACnC;EAEA,IAAI,CAACC,aAAa,CAACb,QAAQ,EAAE,YAAW;IACtC,IAAIS,gBAAgB,EAAE;MACpBrB,IAAI,CAACnD,OAAO,CAACyE,QAAQ,CAAC,CAAC,CAACI,MAAM,CAAC,CAAC;IAClC;IACA9B,IAAI,CAAC,CAAC;EACR,CAAC,CAAC;AAEJ,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAlD,KAAK,CAACuB,SAAS,CAACwD,aAAa,GAAG,UAASE,EAAE,EAAE/B,IAAI,EAAE;EAEjD,IAAIzC,UAAU,GAAG,IAAI,CAACN,OAAO,CAACM,UAAU,CAAC,CAAC;EAE1C,IAAI,IAAI,CAACC,SAAS,EAAE;IAClB,IAAI,CAACgB,YAAY,CAAC,CAAC;EACrB;EAEA,IAAIwD,IAAI,GAAGD,EAAE,CAAC,CAAC;EACf,IAAI,OAAOC,IAAI,KAAK,UAAU,EAAE;IAC9B,MAAM,IAAIpC,KAAK,CAAC,cAAc,CAAC;EACjC;EAEA,IAAI,CAACpC,SAAS,GAAGuE,EAAE;EACnB,IAAI,CAACrE,aAAa,GAAGsE,IAAI;EACzB,IAAI,CAACvE,kBAAkB,GAAGhB,GAAG,CAAC,CAAC;EAC/B,IAAI,CAACkB,eAAe,GAAG,CAAC,CAAC;EACzB,IAAI,CAACC,iBAAiB,GAAGoC,IAAI;EAE7BzC,UAAU,CAACW,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAACL,sBAAsB,CAAC;EACxEN,UAAU,CAAC0E,iBAAiB,CAAC,CAAC;AAChC,CAAC;;AAGD;AACA;AACA;AACAnF,KAAK,CAACuB,SAAS,CAACG,YAAY,GAAG,YAAW;EAExC,IAAIwB,IAAI,GAAG,IAAI,CAACpC,iBAAiB;EACjC,IAAIL,UAAU,GAAG,IAAI,CAACN,OAAO,CAACM,UAAU,CAAC,CAAC;EAE1C,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;IACnB;EACF;;EAEA;EACA;EACA,IAAI,CAACA,SAAS,GAAG,IAAI;EACrB,IAAI,CAACE,aAAa,GAAG,IAAI;EACzB,IAAI,CAACD,kBAAkB,GAAG,IAAI;EAC9B,IAAI,CAACE,eAAe,GAAG,IAAI;EAC3B,IAAI,CAACC,iBAAiB,GAAG,IAAI;EAE7BL,UAAU,CAACgB,mBAAmB,CAAC,cAAc,EAAE,IAAI,CAACV,sBAAsB,CAAC;EAE3E,IAAImC,IAAI,EAAE;IACRA,IAAI,CAAC,CAAC;EACR;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACAlD,KAAK,CAACuB,SAAS,CAAC2C,QAAQ,GAAG,YAAW;EACpC,OAAO,IAAI,CAACxD,SAAS;AACvB,CAAC;AAGDV,KAAK,CAACuB,SAAS,CAACP,eAAe,GAAG,YAAW;EAE3C,IAAI,CAAC,IAAI,CAACN,SAAS,EAAE;IACnB,MAAM,IAAIoC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EAEA,IAAIrC,UAAU,GAAG,IAAI,CAACN,OAAO,CAACM,UAAU,CAAC,CAAC;EAC1C,IAAIP,IAAI,GAAG,IAAI,CAACE,KAAK;EAErB,IAAIgE,OAAO,GAAGzE,GAAG,CAAC,CAAC,GAAG,IAAI,CAACgB,kBAAkB;EAC7C,IAAIuE,IAAI,GAAG,IAAI,CAACtE,aAAa;EAC7B,IAAIyC,MAAM,GAAG,IAAI,CAACxC,eAAe;EAEjCwC,MAAM,GAAGnD,IAAI,CAAC6D,UAAU,CAACV,MAAM,CAAC;EAChCA,MAAM,GAAG6B,IAAI,CAAC7B,MAAM,EAAEe,OAAO,CAAC;EAC9B,IAAIf,MAAM,IAAI,IAAI,EAAE;IAClB,IAAI,CAAC3B,YAAY,CAAC,CAAC;EACrB,CAAC,MAAM;IACLxB,IAAI,CAACkF,aAAa,CAAC/B,MAAM,CAAC;IAC1B5C,UAAU,CAAC0E,iBAAiB,CAAC,CAAC;EAChC;AAEF,CAAC;AAGDnF,KAAK,CAACuB,SAAS,CAACJ,uBAAuB,GAAG,YAAW;EACnD,IAAI,IAAI,CAACa,OAAO,CAAC,CAAC,EAAE;IAClB,IAAI,CAAC1B,iBAAiB,CAAC+E,IAAI,CAAC,CAAC;EAC/B,CAAC,MAAM;IACL,IAAI,CAAC/E,iBAAiB,CAACgF,IAAI,CAAC,CAAC;EAC/B;AACF,CAAC;AAGDC,MAAM,CAACC,OAAO,GAAGxF,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}