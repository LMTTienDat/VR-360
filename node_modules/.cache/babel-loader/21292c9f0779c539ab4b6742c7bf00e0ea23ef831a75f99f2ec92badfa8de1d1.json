{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar HammerGestures = require('./HammerGestures');\nvar defaults = require('../util/defaults');\nvar maxFriction = require('./util').maxFriction;\nvar clearOwnProperties = require('../util/clearOwnProperties');\nvar defaultOptions = {\n  friction: 6,\n  maxFrictionTime: 0.3,\n  hammerEvent: 'pan'\n};\nvar debug = typeof MARZIPANODEBUG !== 'undefined' && MARZIPANODEBUG.controls;\n\n/**\n * @class DragControlMethod\n * @implements ControlMethod\n * @classdesc\n *\n * Controls the view by clicking/tapping and dragging.\n *\n * @param {Element} element Element to listen for events.\n * @param {string} pointerType Which Hammer.js pointer type to use (e.g.\n * `mouse` or `touch`).\n * @param {Object} opts\n * @param {number} opts.friction\n * @param {number} opts.maxFrictionTime\n * @param {'pan'|'pinch'} opts.hammerEvent\n */\nfunction DragControlMethod(element, pointerType, opts) {\n  this._element = element;\n  this._opts = defaults(opts || {}, defaultOptions);\n  this._startEvent = null;\n  this._lastEvent = null;\n  this._active = false;\n  this._dynamics = {\n    x: new Dynamics(),\n    y: new Dynamics()\n  };\n  this._hammer = HammerGestures.get(element, pointerType);\n  this._hammer.on(\"hammer.input\", this._handleHammerEvent.bind(this));\n  if (this._opts.hammerEvent != 'pan' && this._opts.hammerEvent != 'pinch') {\n    throw new Error(this._opts.hammerEvent + ' is not a hammerEvent managed in DragControlMethod');\n  }\n  this._hammer.on(this._opts.hammerEvent + 'start', this._handleStart.bind(this));\n  this._hammer.on(this._opts.hammerEvent + 'move', this._handleMove.bind(this));\n  this._hammer.on(this._opts.hammerEvent + 'end', this._handleEnd.bind(this));\n  this._hammer.on(this._opts.hammerEvent + 'cancel', this._handleEnd.bind(this));\n}\neventEmitter(DragControlMethod);\n\n/**\n * Destructor.\n */\nDragControlMethod.prototype.destroy = function () {\n  this._hammer.release();\n  clearOwnProperties(this);\n};\nDragControlMethod.prototype._handleHammerEvent = function (e) {\n  if (e.isFirst) {\n    if (debug && this._active) {\n      throw new Error('DragControlMethod active detected when already active');\n    }\n    this._active = true;\n    this.emit('active');\n  }\n  if (e.isFinal) {\n    if (debug && !this._active) {\n      throw new Error('DragControlMethod inactive detected when already inactive');\n    }\n    this._active = false;\n    this.emit('inactive');\n  }\n};\nDragControlMethod.prototype._handleStart = function (e) {\n  // Prevent this event from dragging other DOM elements, causing\n  // unexpected behavior on Chrome.\n  e.preventDefault();\n  this._startEvent = e;\n};\nDragControlMethod.prototype._handleMove = function (e) {\n  // Prevent this event from dragging other DOM elements, causing\n  // unexpected behavior on Chrome.\n  e.preventDefault();\n  if (this._startEvent) {\n    this._updateDynamicsMove(e);\n    this.emit('parameterDynamics', 'axisScaledX', this._dynamics.x);\n    this.emit('parameterDynamics', 'axisScaledY', this._dynamics.y);\n  }\n};\nDragControlMethod.prototype._handleEnd = function (e) {\n  // Prevent this event from dragging other DOM elements, causing\n  // unexpected behavior on Chrome.\n  e.preventDefault();\n  if (this._startEvent) {\n    this._updateDynamicsRelease(e);\n    this.emit('parameterDynamics', 'axisScaledX', this._dynamics.x);\n    this.emit('parameterDynamics', 'axisScaledY', this._dynamics.y);\n  }\n  this._startEvent = false;\n  this._lastEvent = false;\n};\nDragControlMethod.prototype._updateDynamicsMove = function (e) {\n  var x = e.deltaX;\n  var y = e.deltaY;\n\n  // When a second finger touches the screen, panstart sometimes has a large\n  // offset at start; subtract that offset to prevent a sudden jump.\n  var eventToSubtract = this._lastEvent || this._startEvent;\n  if (eventToSubtract) {\n    x -= eventToSubtract.deltaX;\n    y -= eventToSubtract.deltaY;\n  }\n  var elementRect = this._element.getBoundingClientRect();\n  var width = elementRect.right - elementRect.left;\n  var height = elementRect.bottom - elementRect.top;\n  x /= width;\n  y /= height;\n  this._dynamics.x.reset();\n  this._dynamics.y.reset();\n  this._dynamics.x.offset = -x;\n  this._dynamics.y.offset = -y;\n  this._lastEvent = e;\n};\nvar tmpReleaseFriction = [null, null];\nDragControlMethod.prototype._updateDynamicsRelease = function (e) {\n  var elementRect = this._element.getBoundingClientRect();\n  var width = elementRect.right - elementRect.left;\n  var height = elementRect.bottom - elementRect.top;\n  var x = 1000 * e.velocityX / width;\n  var y = 1000 * e.velocityY / height;\n  this._dynamics.x.reset();\n  this._dynamics.y.reset();\n  this._dynamics.x.velocity = x;\n  this._dynamics.y.velocity = y;\n  maxFriction(this._opts.friction, this._dynamics.x.velocity, this._dynamics.y.velocity, this._opts.maxFrictionTime, tmpReleaseFriction);\n  this._dynamics.x.friction = tmpReleaseFriction[0];\n  this._dynamics.y.friction = tmpReleaseFriction[1];\n};\nmodule.exports = DragControlMethod;","map":{"version":3,"names":["eventEmitter","require","Dynamics","HammerGestures","defaults","maxFriction","clearOwnProperties","defaultOptions","friction","maxFrictionTime","hammerEvent","debug","MARZIPANODEBUG","controls","DragControlMethod","element","pointerType","opts","_element","_opts","_startEvent","_lastEvent","_active","_dynamics","x","y","_hammer","get","on","_handleHammerEvent","bind","Error","_handleStart","_handleMove","_handleEnd","prototype","destroy","release","e","isFirst","emit","isFinal","preventDefault","_updateDynamicsMove","_updateDynamicsRelease","deltaX","deltaY","eventToSubtract","elementRect","getBoundingClientRect","width","right","left","height","bottom","top","reset","offset","tmpReleaseFriction","velocityX","velocityY","velocity","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/controls/Drag.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar HammerGestures = require('./HammerGestures');\nvar defaults = require('../util/defaults');\nvar maxFriction = require('./util').maxFriction;\nvar clearOwnProperties = require('../util/clearOwnProperties');\n\nvar defaultOptions = {\n  friction: 6,\n  maxFrictionTime: 0.3,\n  hammerEvent: 'pan'\n};\n\nvar debug = typeof MARZIPANODEBUG !== 'undefined' && MARZIPANODEBUG.controls;\n\n/**\n * @class DragControlMethod\n * @implements ControlMethod\n * @classdesc\n *\n * Controls the view by clicking/tapping and dragging.\n *\n * @param {Element} element Element to listen for events.\n * @param {string} pointerType Which Hammer.js pointer type to use (e.g.\n * `mouse` or `touch`).\n * @param {Object} opts\n * @param {number} opts.friction\n * @param {number} opts.maxFrictionTime\n * @param {'pan'|'pinch'} opts.hammerEvent\n */\nfunction DragControlMethod(element, pointerType, opts) {\n  this._element = element;\n\n  this._opts = defaults(opts || {}, defaultOptions);\n\n  this._startEvent = null;\n  this._lastEvent = null;\n\n  this._active = false;\n\n  this._dynamics = {\n    x: new Dynamics(),\n    y: new Dynamics()\n  };\n\n  this._hammer = HammerGestures.get(element, pointerType);\n\n  this._hammer.on(\"hammer.input\", this._handleHammerEvent.bind(this));\n\n  if (this._opts.hammerEvent != 'pan' && this._opts.hammerEvent != 'pinch') {\n    throw new Error(this._opts.hammerEvent + ' is not a hammerEvent managed in DragControlMethod');\n  }\n\n  this._hammer.on(this._opts.hammerEvent + 'start', this._handleStart.bind(this));\n  this._hammer.on(this._opts.hammerEvent + 'move', this._handleMove.bind(this));\n  this._hammer.on(this._opts.hammerEvent + 'end', this._handleEnd.bind(this));\n  this._hammer.on(this._opts.hammerEvent + 'cancel', this._handleEnd.bind(this));\n}\n\neventEmitter(DragControlMethod);\n\n/**\n * Destructor.\n */\nDragControlMethod.prototype.destroy = function() {\n  this._hammer.release();\n  clearOwnProperties(this);\n};\n\nDragControlMethod.prototype._handleHammerEvent = function(e) {\n  if (e.isFirst) {\n    if (debug && this._active) {\n      throw new Error('DragControlMethod active detected when already active');\n    }\n    this._active = true;\n    this.emit('active');\n  }\n  if (e.isFinal) {\n    if (debug && !this._active) {\n      throw new Error('DragControlMethod inactive detected when already inactive');\n    }\n    this._active = false;\n    this.emit('inactive');\n  }\n};\n\nDragControlMethod.prototype._handleStart = function(e) {\n  // Prevent this event from dragging other DOM elements, causing\n  // unexpected behavior on Chrome.\n  e.preventDefault();\n\n  this._startEvent = e;\n};\n\n\nDragControlMethod.prototype._handleMove = function(e) {\n  // Prevent this event from dragging other DOM elements, causing\n  // unexpected behavior on Chrome.\n  e.preventDefault();\n\n  if (this._startEvent) {\n    this._updateDynamicsMove(e);\n    this.emit('parameterDynamics', 'axisScaledX', this._dynamics.x);\n    this.emit('parameterDynamics', 'axisScaledY', this._dynamics.y);\n  }\n};\n\n\nDragControlMethod.prototype._handleEnd = function(e) {\n  // Prevent this event from dragging other DOM elements, causing\n  // unexpected behavior on Chrome.\n  e.preventDefault();\n\n  if (this._startEvent) {\n    this._updateDynamicsRelease(e);\n    this.emit('parameterDynamics', 'axisScaledX', this._dynamics.x);\n    this.emit('parameterDynamics', 'axisScaledY', this._dynamics.y);\n  }\n\n  this._startEvent = false;\n  this._lastEvent = false;\n};\n\n\nDragControlMethod.prototype._updateDynamicsMove = function(e) {\n  var x = e.deltaX;\n  var y = e.deltaY;\n\n  // When a second finger touches the screen, panstart sometimes has a large\n  // offset at start; subtract that offset to prevent a sudden jump.\n  var eventToSubtract = this._lastEvent || this._startEvent;\n\n  if (eventToSubtract) {\n    x -= eventToSubtract.deltaX;\n    y -= eventToSubtract.deltaY;\n  }\n\n  var elementRect = this._element.getBoundingClientRect();\n  var width = elementRect.right - elementRect.left;\n  var height = elementRect.bottom - elementRect.top;\n\n  x /= width;\n  y /= height;\n\n  this._dynamics.x.reset();\n  this._dynamics.y.reset();\n  this._dynamics.x.offset = -x;\n  this._dynamics.y.offset = -y;\n\n  this._lastEvent = e;\n};\n\n\nvar tmpReleaseFriction = [ null, null ];\nDragControlMethod.prototype._updateDynamicsRelease = function(e) {\n  var elementRect = this._element.getBoundingClientRect();\n  var width = elementRect.right - elementRect.left;\n  var height = elementRect.bottom - elementRect.top;\n\n  var x = 1000 * e.velocityX / width;\n  var y = 1000 * e.velocityY / height;\n\n  this._dynamics.x.reset();\n  this._dynamics.y.reset();\n  this._dynamics.x.velocity = x;\n  this._dynamics.y.velocity = y;\n\n  maxFriction(this._opts.friction, this._dynamics.x.velocity, this._dynamics.y.velocity, this._opts.maxFrictionTime, tmpReleaseFriction);\n  this._dynamics.x.friction = tmpReleaseFriction[0];\n  this._dynamics.y.friction = tmpReleaseFriction[1];\n};\n\n\nmodule.exports = DragControlMethod;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}