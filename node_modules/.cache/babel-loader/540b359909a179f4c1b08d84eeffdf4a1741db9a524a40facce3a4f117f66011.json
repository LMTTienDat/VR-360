{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar positionAbsolutely = require('./util/positionAbsolutely');\nvar setTransform = require('./util/dom').setTransform;\nvar clearOwnProperties = require('./util/clearOwnProperties');\n\n/**\n * @class Hotspot\n * @classdesc\n *\n * A Hotspot allows a DOM element to be placed at a fixed position in the\n * image. The position is updated automatically when the {@link View view}\n * changes.\n *\n * Positioning is performed with the `transform` CSS property when available,\n * falling back to the `position`, `left` and `top` properties when not.\n * In both cases, the top left corner of the element is placed in the requested\n * position; clients are expected to use additional children elements or other\n * CSS properties to achieve more sophisticated layouts.\n *\n * There are two kinds of hotspots: regular and embedded. A regular hotspot\n * does not change size depending on the zoom level. An embedded hotspot is\n * displayed at a fixed size relative to the panorama, always covering the\n * same portion of the image.\n *\n * Clients should call {@link HotspotContainer#createHotspot} instead of\n * invoking the constructor directly.\n *\n * @param {Element} domElement The DOM element.\n * @param {View} view The view.\n * @param {Object} coords The hotspot coordinates.\n *     Use {@link RectilinearViewCoords} for a {@link RectilinearView} or\n *     {@link FlatViewCoords} for a {@link FlatView}.\n * @param {Object} opts Additional options.\n * @param {Object} opts.perspective Perspective options for embedded hotspots.\n * @param {number} [opts.perspective.radius=null] If set, embed the hotspot\n *     into the image by transforming it into the surface of a sphere with this\n *     radius.\n * @param {string} [opts.perspective.extraTransforms=null] If set, append this\n *     value to the CSS `transform` property used to position the hotspot. This\n *     may be used to rotate an embedded hotspot.\n */\nfunction Hotspot(domElement, parentDomElement, view, coords, opts) {\n  opts = opts || {};\n  opts.perspective = opts.perspective || {};\n  opts.perspective.extraTransforms = opts.perspective.extraTransforms != null ? opts.perspective.extraTransforms : \"\";\n  this._domElement = domElement;\n  this._parentDomElement = parentDomElement;\n  this._view = view;\n  this._coords = {};\n  this._perspective = {};\n  this.setPosition(coords);\n\n  // Add hotspot into the DOM.\n  this._parentDomElement.appendChild(this._domElement);\n  this.setPerspective(opts.perspective);\n\n  // Whether the hotspot is visible.\n  // The hotspot may still be hidden if it's inside a hidden HotspotContainer.\n  this._visible = true;\n\n  // The current calculated screen position.\n  this._position = {\n    x: 0,\n    y: 0\n  };\n}\neventEmitter(Hotspot);\n\n/**\n * Destructor.\n * Clients should call {@link HotspotContainer#destroyHotspot} instead.\n */\nHotspot.prototype.destroy = function () {\n  this._parentDomElement.removeChild(this._domElement);\n  clearOwnProperties(this);\n};\n\n/**\n * @return {Element}\n */\nHotspot.prototype.domElement = function () {\n  return this._domElement;\n};\n\n/**\n * @return {Object}\n */\nHotspot.prototype.position = function () {\n  return this._coords;\n};\n\n/**\n * @param {Object} coords\n */\nHotspot.prototype.setPosition = function (coords) {\n  for (var key in coords) {\n    this._coords[key] = coords[key];\n  }\n  this._update();\n  // TODO: We should probably emit a hotspotsChange event on the parent\n  // HotspotContainer. What's the best way to do so?\n};\n\n/**\n * @return {Object}\n */\nHotspot.prototype.perspective = function () {\n  return this._perspective;\n};\n\n/**\n * @param {Object}\n */\nHotspot.prototype.setPerspective = function (perspective) {\n  for (var key in perspective) {\n    this._perspective[key] = perspective[key];\n  }\n  this._update();\n};\n\n/**\n * Show the hotspot\n */\nHotspot.prototype.show = function () {\n  if (!this._visible) {\n    this._visible = true;\n    this._update();\n  }\n};\n\n/**\n * Hide the hotspot\n */\nHotspot.prototype.hide = function () {\n  if (this._visible) {\n    this._visible = false;\n    this._update();\n  }\n};\nHotspot.prototype._update = function () {\n  var element = this._domElement;\n  var params = this._coords;\n  var position = this._position;\n  var x, y;\n  var isVisible = false;\n  if (this._visible) {\n    var view = this._view;\n    if (this._perspective.radius) {\n      // Hotspots that are embedded in the panorama may be visible even when\n      // positioned behind the camera.\n      isVisible = true;\n      this._setEmbeddedPosition(view, params);\n    } else {\n      // Regular hotspots are only visible when positioned in front of the\n      // camera. Note that they may be partially visible when positioned outside\n      // the viewport.\n      view.coordinatesToScreen(params, position);\n      x = position.x;\n      y = position.y;\n      if (x != null && y != null) {\n        isVisible = true;\n        this._setPosition(x, y);\n      }\n    }\n  }\n\n  // Show if visible, hide if not.\n  if (isVisible) {\n    element.style.display = 'block';\n    element.style.position = 'absolute';\n  } else {\n    element.style.display = 'none';\n    element.style.position = '';\n  }\n};\nHotspot.prototype._setEmbeddedPosition = function (view, params) {\n  var transform = view.coordinatesToPerspectiveTransform(params, this._perspective.radius, this._perspective.extraTransforms);\n  setTransform(this._domElement, transform);\n};\nHotspot.prototype._setPosition = function (x, y) {\n  positionAbsolutely(this._domElement, x, y, this._perspective.extraTransforms);\n};\nmodule.exports = Hotspot;","map":{"version":3,"names":["eventEmitter","require","positionAbsolutely","setTransform","clearOwnProperties","Hotspot","domElement","parentDomElement","view","coords","opts","perspective","extraTransforms","_domElement","_parentDomElement","_view","_coords","_perspective","setPosition","appendChild","setPerspective","_visible","_position","x","y","prototype","destroy","removeChild","position","key","_update","show","hide","element","params","isVisible","radius","_setEmbeddedPosition","coordinatesToScreen","_setPosition","style","display","transform","coordinatesToPerspectiveTransform","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/Hotspot.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar positionAbsolutely = require('./util/positionAbsolutely');\nvar setTransform = require('./util/dom').setTransform;\nvar clearOwnProperties = require('./util/clearOwnProperties');\n\n/**\n * @class Hotspot\n * @classdesc\n *\n * A Hotspot allows a DOM element to be placed at a fixed position in the\n * image. The position is updated automatically when the {@link View view}\n * changes.\n *\n * Positioning is performed with the `transform` CSS property when available,\n * falling back to the `position`, `left` and `top` properties when not.\n * In both cases, the top left corner of the element is placed in the requested\n * position; clients are expected to use additional children elements or other\n * CSS properties to achieve more sophisticated layouts.\n *\n * There are two kinds of hotspots: regular and embedded. A regular hotspot\n * does not change size depending on the zoom level. An embedded hotspot is\n * displayed at a fixed size relative to the panorama, always covering the\n * same portion of the image.\n *\n * Clients should call {@link HotspotContainer#createHotspot} instead of\n * invoking the constructor directly.\n *\n * @param {Element} domElement The DOM element.\n * @param {View} view The view.\n * @param {Object} coords The hotspot coordinates.\n *     Use {@link RectilinearViewCoords} for a {@link RectilinearView} or\n *     {@link FlatViewCoords} for a {@link FlatView}.\n * @param {Object} opts Additional options.\n * @param {Object} opts.perspective Perspective options for embedded hotspots.\n * @param {number} [opts.perspective.radius=null] If set, embed the hotspot\n *     into the image by transforming it into the surface of a sphere with this\n *     radius.\n * @param {string} [opts.perspective.extraTransforms=null] If set, append this\n *     value to the CSS `transform` property used to position the hotspot. This\n *     may be used to rotate an embedded hotspot.\n */\nfunction Hotspot(domElement, parentDomElement, view, coords, opts) {\n\n  opts = opts || {};\n  opts.perspective = opts.perspective || {};\n  opts.perspective.extraTransforms =\n      opts.perspective.extraTransforms != null ? opts.perspective.extraTransforms : \"\";\n\n  this._domElement = domElement;\n  this._parentDomElement = parentDomElement;\n  this._view = view;\n  this._coords = {};\n  this._perspective = {};\n\n  this.setPosition(coords);\n\n  // Add hotspot into the DOM.\n  this._parentDomElement.appendChild(this._domElement);\n\n  this.setPerspective(opts.perspective);\n\n  // Whether the hotspot is visible.\n  // The hotspot may still be hidden if it's inside a hidden HotspotContainer.\n  this._visible = true;\n\n  // The current calculated screen position.\n  this._position = { x: 0, y: 0 };\n}\n\neventEmitter(Hotspot);\n\n\n/**\n * Destructor.\n * Clients should call {@link HotspotContainer#destroyHotspot} instead.\n */\nHotspot.prototype.destroy = function() {\n  this._parentDomElement.removeChild(this._domElement);\n  clearOwnProperties(this);\n};\n\n\n/**\n * @return {Element}\n */\nHotspot.prototype.domElement = function() {\n  return this._domElement;\n};\n\n\n/**\n * @return {Object}\n */\nHotspot.prototype.position = function() {\n  return this._coords;\n};\n\n\n/**\n * @param {Object} coords\n */\nHotspot.prototype.setPosition = function(coords) {\n  for (var key in coords) {\n    this._coords[key] = coords[key];\n  }\n  this._update();\n  // TODO: We should probably emit a hotspotsChange event on the parent\n  // HotspotContainer. What's the best way to do so?\n};\n\n\n/**\n * @return {Object}\n */\nHotspot.prototype.perspective = function() {\n  return this._perspective;\n};\n\n\n/**\n * @param {Object}\n */\nHotspot.prototype.setPerspective = function(perspective) {\n  for (var key in perspective) {\n    this._perspective[key] = perspective[key];\n  }\n  this._update();\n};\n\n\n/**\n * Show the hotspot\n */\nHotspot.prototype.show = function() {\n  if (!this._visible) {\n    this._visible = true;\n    this._update();\n  }\n};\n\n\n/**\n * Hide the hotspot\n */\nHotspot.prototype.hide = function() {\n  if (this._visible) {\n    this._visible = false;\n    this._update();\n  }\n};\n\n\nHotspot.prototype._update = function() {\n  var element = this._domElement;\n\n  var params = this._coords;\n  var position = this._position;\n  var x, y;\n\n  var isVisible = false;\n\n  if (this._visible) {\n    var view = this._view;\n\n    if (this._perspective.radius) {\n      // Hotspots that are embedded in the panorama may be visible even when\n      // positioned behind the camera.\n      isVisible = true;\n      this._setEmbeddedPosition(view, params);\n    } else {\n      // Regular hotspots are only visible when positioned in front of the\n      // camera. Note that they may be partially visible when positioned outside\n      // the viewport.\n      view.coordinatesToScreen(params, position);\n      x = position.x;\n      y = position.y;\n\n      if (x != null && y != null) {\n        isVisible = true;\n        this._setPosition(x, y);\n      }\n    }\n  }\n\n  // Show if visible, hide if not.\n  if (isVisible) {\n    element.style.display = 'block';\n    element.style.position = 'absolute';\n  }\n  else {\n    element.style.display = 'none';\n    element.style.position = '';\n  }\n\n};\n\n\nHotspot.prototype._setEmbeddedPosition = function(view, params) {\n  var transform = view.coordinatesToPerspectiveTransform(\n      params, this._perspective.radius, this._perspective.extraTransforms);\n  setTransform(this._domElement, transform);\n};\n\n\nHotspot.prototype._setPosition = function(x, y) {\n  positionAbsolutely(this._domElement, x, y, this._perspective.extraTransforms);\n};\n\n\nmodule.exports = Hotspot;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}