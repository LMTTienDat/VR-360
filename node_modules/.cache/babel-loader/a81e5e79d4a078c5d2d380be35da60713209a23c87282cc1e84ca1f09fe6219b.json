{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar now = require('../util/now');\nvar clearOwnProperties = require('../util/clearOwnProperties');\n\n/**\n * @class ControlComposer\n * @classdesc\n *\n * Combines changes in parameters triggered by multiple {@link ControlMethod}\n * instances.\n *\n * @listens ControlMethod#parameterDynamics\n */\nfunction ControlComposer(opts) {\n  opts = opts || {};\n  this._methods = [];\n  this._parameters = ['x', 'y', 'axisScaledX', 'axisScaledY', 'zoom', 'yaw', 'pitch', 'roll'];\n  this._now = opts.nowForTesting || now;\n  this._composedOffsets = {};\n  this._composeReturn = {\n    offsets: this._composedOffsets,\n    changing: null\n  };\n}\neventEmitter(ControlComposer);\nControlComposer.prototype.add = function (instance) {\n  if (this.has(instance)) {\n    return;\n  }\n  var dynamics = {};\n  this._parameters.forEach(function (parameter) {\n    dynamics[parameter] = {\n      dynamics: new Dynamics(),\n      time: null\n    };\n  });\n  var parameterDynamicsHandler = this._updateDynamics.bind(this, dynamics);\n  var method = {\n    instance: instance,\n    dynamics: dynamics,\n    parameterDynamicsHandler: parameterDynamicsHandler\n  };\n  instance.addEventListener('parameterDynamics', parameterDynamicsHandler);\n  this._methods.push(method);\n};\nControlComposer.prototype.remove = function (instance) {\n  var index = this._indexOfInstance(instance);\n  if (index >= 0) {\n    var method = this._methods.splice(index, 1)[0];\n    method.instance.removeEventListener('parameterDynamics', method.parameterDynamicsHandler);\n  }\n};\nControlComposer.prototype.has = function (instance) {\n  return this._indexOfInstance(instance) >= 0;\n};\nControlComposer.prototype._indexOfInstance = function (instance) {\n  for (var i = 0; i < this._methods.length; i++) {\n    if (this._methods[i].instance === instance) {\n      return i;\n    }\n  }\n  return -1;\n};\nControlComposer.prototype.list = function () {\n  var instances = [];\n  for (var i = 0; i < this._methods.length; i++) {\n    instances.push(this._methods[i].instance);\n  }\n  return instances;\n};\nControlComposer.prototype._updateDynamics = function (storedDynamics, parameter, dynamics) {\n  var parameterDynamics = storedDynamics[parameter];\n  if (!parameterDynamics) {\n    throw new Error(\"Unknown control parameter \" + parameter);\n  }\n  var newTime = this._now();\n  parameterDynamics.dynamics.update(dynamics, (newTime - parameterDynamics.time) / 1000);\n  parameterDynamics.time = newTime;\n  this.emit('change');\n};\nControlComposer.prototype._resetComposedOffsets = function () {\n  for (var i = 0; i < this._parameters.length; i++) {\n    this._composedOffsets[this._parameters[i]] = 0;\n  }\n};\nControlComposer.prototype.offsets = function () {\n  var parameter;\n  var changing = false;\n  var currentTime = this._now();\n  this._resetComposedOffsets();\n  for (var i = 0; i < this._methods.length; i++) {\n    var methodDynamics = this._methods[i].dynamics;\n    for (var p = 0; p < this._parameters.length; p++) {\n      parameter = this._parameters[p];\n      var parameterDynamics = methodDynamics[parameter];\n      var dynamics = parameterDynamics.dynamics;\n\n      // Add offset to composed offset\n      if (dynamics.offset != null) {\n        this._composedOffsets[parameter] += dynamics.offset;\n        // Reset offset\n        dynamics.offset = null;\n      }\n\n      // Calculate offset from velocity and add it\n      var elapsed = (currentTime - parameterDynamics.time) / 1000;\n      var offsetFromVelocity = dynamics.offsetFromVelocity(elapsed);\n      if (offsetFromVelocity) {\n        this._composedOffsets[parameter] += offsetFromVelocity;\n      }\n\n      // Update velocity on dynamics\n      var currentVelocity = dynamics.velocityAfter(elapsed);\n      dynamics.velocity = currentVelocity;\n\n      // If there is still a velocity, set changing\n      if (currentVelocity) {\n        changing = true;\n      }\n      parameterDynamics.time = currentTime;\n    }\n  }\n  this._composeReturn.changing = changing;\n  return this._composeReturn;\n};\nControlComposer.prototype.destroy = function () {\n  var instances = this.list();\n  for (var i = 0; i < instances.length; i++) {\n    this.remove(instances[i]);\n  }\n  clearOwnProperties(this);\n};\nmodule.exports = ControlComposer;","map":{"version":3,"names":["eventEmitter","require","Dynamics","now","clearOwnProperties","ControlComposer","opts","_methods","_parameters","_now","nowForTesting","_composedOffsets","_composeReturn","offsets","changing","prototype","add","instance","has","dynamics","forEach","parameter","time","parameterDynamicsHandler","_updateDynamics","bind","method","addEventListener","push","remove","index","_indexOfInstance","splice","removeEventListener","i","length","list","instances","storedDynamics","parameterDynamics","Error","newTime","update","emit","_resetComposedOffsets","currentTime","methodDynamics","p","offset","elapsed","offsetFromVelocity","currentVelocity","velocityAfter","velocity","destroy","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/controls/Composer.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar now = require('../util/now');\nvar clearOwnProperties = require('../util/clearOwnProperties');\n\n/**\n * @class ControlComposer\n * @classdesc\n *\n * Combines changes in parameters triggered by multiple {@link ControlMethod}\n * instances.\n *\n * @listens ControlMethod#parameterDynamics\n */\nfunction ControlComposer(opts) {\n  opts = opts || {};\n\n  this._methods = [];\n\n  this._parameters = [ 'x' ,'y', 'axisScaledX', 'axisScaledY', 'zoom', 'yaw', 'pitch', 'roll' ];\n\n  this._now = opts.nowForTesting || now;\n\n  this._composedOffsets = { };\n\n  this._composeReturn = { offsets: this._composedOffsets, changing: null };\n}\n\neventEmitter(ControlComposer);\n\n\nControlComposer.prototype.add = function(instance) {\n  if (this.has(instance)) {\n    return;\n  }\n\n  var dynamics = {};\n  this._parameters.forEach(function(parameter) {\n    dynamics[parameter] = {\n      dynamics: new Dynamics(),\n      time: null\n    };\n  });\n\n  var parameterDynamicsHandler = this._updateDynamics.bind(this, dynamics);\n\n  var method = {\n    instance: instance,\n    dynamics: dynamics,\n    parameterDynamicsHandler: parameterDynamicsHandler\n  };\n\n  instance.addEventListener('parameterDynamics', parameterDynamicsHandler);\n\n  this._methods.push(method);\n};\n\n\nControlComposer.prototype.remove = function(instance) {\n  var index = this._indexOfInstance(instance);\n  if (index >= 0) {\n    var method = this._methods.splice(index, 1)[0];\n    method.instance.removeEventListener('parameterDynamics', method.parameterDynamicsHandler);\n  }\n};\n\n\nControlComposer.prototype.has = function(instance) {\n  return this._indexOfInstance(instance) >= 0;\n};\n\n\nControlComposer.prototype._indexOfInstance = function(instance) {\n  for (var i = 0; i < this._methods.length; i++) {\n    if (this._methods[i].instance === instance) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\nControlComposer.prototype.list = function() {\n  var instances = [];\n  for (var i = 0; i < this._methods.length; i++) {\n    instances.push(this._methods[i].instance);\n  }\n  return instances;\n};\n\n\nControlComposer.prototype._updateDynamics = function(storedDynamics, parameter, dynamics) {\n  var parameterDynamics = storedDynamics[parameter];\n\n  if (!parameterDynamics) {\n    throw new Error(\"Unknown control parameter \" + parameter);\n  }\n\n  var newTime = this._now();\n  parameterDynamics.dynamics.update(dynamics, (newTime - parameterDynamics.time)/1000);\n  parameterDynamics.time = newTime;\n\n  this.emit('change');\n};\n\n\nControlComposer.prototype._resetComposedOffsets = function() {\n  for (var i = 0; i < this._parameters.length; i++) {\n    this._composedOffsets[this._parameters[i]] = 0;\n  }\n};\n\n\nControlComposer.prototype.offsets = function() {\n  var parameter;\n  var changing = false;\n\n  var currentTime = this._now();\n\n  this._resetComposedOffsets();\n\n  for (var i = 0; i < this._methods.length; i++) {\n    var methodDynamics = this._methods[i].dynamics;\n\n    for (var p = 0; p < this._parameters.length; p++) {\n      parameter = this._parameters[p];\n      var parameterDynamics = methodDynamics[parameter];\n      var dynamics = parameterDynamics.dynamics;\n\n\n      // Add offset to composed offset\n      if (dynamics.offset != null) {\n        this._composedOffsets[parameter] += dynamics.offset;\n        // Reset offset\n        dynamics.offset = null;\n      }\n\n      // Calculate offset from velocity and add it\n      var elapsed = (currentTime - parameterDynamics.time)/1000;\n      var offsetFromVelocity = dynamics.offsetFromVelocity(elapsed);\n\n      if(offsetFromVelocity) {\n        this._composedOffsets[parameter] += offsetFromVelocity;\n      }\n\n      // Update velocity on dynamics\n      var currentVelocity = dynamics.velocityAfter(elapsed);\n      dynamics.velocity = currentVelocity;\n\n      // If there is still a velocity, set changing\n      if(currentVelocity) {\n        changing = true;\n      }\n\n      parameterDynamics.time = currentTime;\n    }\n  }\n\n  this._composeReturn.changing = changing;\n  return this._composeReturn;\n};\n\n\nControlComposer.prototype.destroy = function() {\n  var instances = this.list();\n  for (var i = 0; i < instances.length; i++) {\n    this.remove(instances[i]);\n  }\n\n  clearOwnProperties(this);\n};\n\n\nmodule.exports = ControlComposer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}