{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar mod = require('../util/mod');\nvar defaultCapacity = 64;\n\n// A set data structure for elements implementing hash() and equals().\n// The capacity, if given, is just a hint; the set is allowed to exceed it, but\n// performance may suffer.\nfunction Set(capacity) {\n  if (capacity != null && (!isFinite(capacity) || Math.floor(capacity) !== capacity || capacity < 1)) {\n    throw new Error('Set: invalid capacity');\n  }\n  this._capacity = this._capacity || defaultCapacity;\n  this._buckets = [];\n  for (var i = 0; i < this._capacity; i++) {\n    this._buckets.push([]);\n  }\n  this._size = 0;\n}\n\n// Adds an element, replacing an existing element.\n// Returns the replaced element, or null if no element was replaced.\nSet.prototype.add = function (element) {\n  var h = mod(element.hash(), this._capacity);\n  var bucket = this._buckets[h];\n  for (var i = 0; i < bucket.length; i++) {\n    var existingElement = bucket[i];\n    if (element.equals(existingElement)) {\n      bucket[i] = element;\n      return existingElement;\n    }\n  }\n  bucket.push(element);\n  this._size++;\n  return null;\n};\n\n// Removes an element.\n// Returns the removed element, or null if the element was not found.\nSet.prototype.remove = function (element) {\n  var h = mod(element.hash(), this._capacity);\n  var bucket = this._buckets[h];\n  for (var i = 0; i < bucket.length; i++) {\n    var existingElement = bucket[i];\n    if (element.equals(existingElement)) {\n      // Splice manually to avoid Array#splice return value allocation.\n      for (var j = i; j < bucket.length - 1; j++) {\n        bucket[j] = bucket[j + 1];\n      }\n      bucket.length = bucket.length - 1;\n      this._size--;\n      return existingElement;\n    }\n  }\n  return null;\n};\n\n// Returns whether an element is in the set.\nSet.prototype.has = function (element) {\n  var h = mod(element.hash(), this._capacity);\n  var bucket = this._buckets[h];\n  for (var i = 0; i < bucket.length; i++) {\n    var existingElement = bucket[i];\n    if (element.equals(existingElement)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Returns the number of elements in the set.\nSet.prototype.size = function () {\n  return this._size;\n};\n\n// Removes all elements from the set.\nSet.prototype.clear = function () {\n  for (var i = 0; i < this._capacity; i++) {\n    this._buckets[i].length = 0;\n  }\n  this._size = 0;\n};\n\n// Calls fn(element) for each element in the set, in an unspecified order.\n// Returns the number of times fn was called.\n// The result is unspecified if the set is mutated during iteration.\nSet.prototype.forEach = function (fn) {\n  var count = 0;\n  for (var i = 0; i < this._capacity; i++) {\n    var bucket = this._buckets[i];\n    for (var j = 0; j < bucket.length; j++) {\n      fn(bucket[j]);\n      count += 1;\n    }\n  }\n  return count;\n};\nmodule.exports = Set;","map":{"version":3,"names":["mod","require","defaultCapacity","Set","capacity","isFinite","Math","floor","Error","_capacity","_buckets","i","push","_size","prototype","add","element","h","hash","bucket","length","existingElement","equals","remove","j","has","size","clear","forEach","fn","count","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/collections/Set.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar mod = require('../util/mod');\n\nvar defaultCapacity = 64;\n\n// A set data structure for elements implementing hash() and equals().\n// The capacity, if given, is just a hint; the set is allowed to exceed it, but\n// performance may suffer.\nfunction Set(capacity) {\n  if (capacity != null &&\n      (!isFinite(capacity) || Math.floor(capacity) !== capacity || capacity < 1)) {\n    throw new Error('Set: invalid capacity');\n  }\n  this._capacity = this._capacity || defaultCapacity;\n\n  this._buckets = [];\n  for (var i = 0; i < this._capacity; i++) {\n    this._buckets.push([]);\n  }\n  this._size = 0;\n}\n\n// Adds an element, replacing an existing element.\n// Returns the replaced element, or null if no element was replaced.\nSet.prototype.add = function(element) {\n  var h = mod(element.hash(), this._capacity);\n  var bucket = this._buckets[h];\n  for (var i = 0; i < bucket.length; i++) {\n    var existingElement = bucket[i];\n    if (element.equals(existingElement)) {\n      bucket[i] = element;\n      return existingElement;\n    }\n  }\n  bucket.push(element);\n  this._size++;\n  return null;\n};\n\n// Removes an element.\n// Returns the removed element, or null if the element was not found.\nSet.prototype.remove = function(element) {\n  var h = mod(element.hash(), this._capacity);\n  var bucket = this._buckets[h];\n  for (var i = 0; i < bucket.length; i++) {\n    var existingElement = bucket[i];\n    if (element.equals(existingElement)) {\n      // Splice manually to avoid Array#splice return value allocation.\n      for (var j = i; j < bucket.length - 1; j++) {\n        bucket[j] = bucket[j+1];\n      }\n      bucket.length = bucket.length - 1;\n      this._size--;\n      return existingElement;\n    }\n  }\n  return null;\n};\n\n// Returns whether an element is in the set.\nSet.prototype.has = function(element) {\n  var h = mod(element.hash(), this._capacity);\n  var bucket = this._buckets[h];\n  for (var i = 0; i < bucket.length; i++) {\n    var existingElement = bucket[i];\n    if (element.equals(existingElement)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Returns the number of elements in the set.\nSet.prototype.size = function() {\n  return this._size;\n};\n\n// Removes all elements from the set.\nSet.prototype.clear = function() {\n  for (var i = 0; i < this._capacity; i++) {\n    this._buckets[i].length = 0;\n  }\n  this._size = 0;\n};\n\n// Calls fn(element) for each element in the set, in an unspecified order.\n// Returns the number of times fn was called.\n// The result is unspecified if the set is mutated during iteration.\nSet.prototype.forEach = function(fn) {\n  var count = 0;\n  for (var i = 0; i < this._capacity; i++) {\n    var bucket = this._buckets[i];\n    for (var j = 0; j < bucket.length; j++) {\n      fn(bucket[j]);\n      count += 1;\n    }\n  }\n  return count;\n};\n\nmodule.exports = Set;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}