{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Composer = require('./Composer');\nvar clearOwnProperties = require('../util/clearOwnProperties');\nvar debug = typeof MARZIPANODEBUG !== 'undefined' && MARZIPANODEBUG.controls;\n\n/**\n * @class Controls\n * @classdesc\n *\n * Set of controls which affect a view (e.g. keyboard, touch)\n *\n * {@link ControlMethod} instances can be registered on this class. The methods\n * are then combined to calculate the final parameters to change the {@link View}.\n *\n * Controls is attached to a {@link RenderLoop}. Currently it affects the\n * {@link view} of all {@link Layer} on the {@link Stage} of the\n * {@link RenderLoop} it is attached to. A more flexible API may be provided\n * in the future.\n *\n * The ControlMethod instances are registered with an id and may be enabled,\n * disabled and unregistered using that id. The whole Control can also be\n * enabled or disabled.\n *\n */\nfunction Controls(opts) {\n  opts = opts || {};\n  this._methods = {};\n  this._methodGroups = {};\n  this._composer = new Composer();\n\n  // Whether the controls are enabled.\n  this._enabled = opts && opts.enabled ? !!opts.enabled : true;\n\n  // How many control methods are enabled and in the active state.\n  this._activeCount = 0;\n  this.updatedViews_ = [];\n  this._attachedRenderLoop = null;\n}\neventEmitter(Controls);\n\n/**\n * Destructor.\n */\nControls.prototype.destroy = function () {\n  this.detach();\n  this._composer.destroy();\n  clearOwnProperties(this);\n};\n\n/**\n * @return {ControlMethod[]} List of registered @{link ControlMethod instances}\n */\nControls.prototype.methods = function () {\n  var obj = {};\n  for (var id in this._methods) {\n    obj[id] = this._methods[id];\n  }\n  return obj;\n};\n\n/**\n * @param {String} id\n * @return {ControlMethod}\n */\nControls.prototype.method = function (id) {\n  return this._methods[id];\n};\n\n/**\n * @param {String} id\n * @param {ControlMethod} instance\n * @param {Boolean} [enable=false]\n */\nControls.prototype.registerMethod = function (id, instance, enable) {\n  if (this._methods[id]) {\n    throw new Error('Control method already registered with id ' + id);\n  }\n  this._methods[id] = {\n    instance: instance,\n    enabled: false,\n    active: false,\n    activeHandler: this._handleActive.bind(this, id),\n    inactiveHandler: this._handleInactive.bind(this, id)\n  };\n  if (enable) {\n    this.enableMethod(id, instance);\n  }\n};\n\n/**\n * @param {String} id\n */\nControls.prototype.unregisterMethod = function (id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('No control method registered with id ' + id);\n  }\n  if (method.enabled) {\n    this.disableMethod(id);\n  }\n  delete this._methods[id];\n};\n\n/**\n * @param {String} id\n */\nControls.prototype.enableMethod = function (id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('No control method registered with id ' + id);\n  }\n  if (method.enabled) {\n    return;\n  }\n  method.enabled = true;\n  if (method.active) {\n    this._incrementActiveCount();\n  }\n  this._listen(id);\n  this._updateComposer();\n  this.emit('methodEnabled', id);\n};\n\n/**\n * @param {String} id\n */\nControls.prototype.disableMethod = function (id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('No control method registered with id ' + id);\n  }\n  if (!method.enabled) {\n    return;\n  }\n  method.enabled = false;\n  if (method.active) {\n    this._decrementActiveCount();\n  }\n  this._unlisten(id);\n  this._updateComposer();\n  this.emit('methodDisabled', id);\n};\n\n/**\n * Create a method group, which can be used to more conveniently enable or\n * disable several control methods at once\n * @param {String} groupId\n * @param {String[]} methodIds\n */\nControls.prototype.addMethodGroup = function (groupId, methodIds) {\n  this._methodGroups[groupId] = methodIds;\n};\n\n/**\n * @param {String} groupId\n */\nControls.prototype.removeMethodGroup = function (id) {\n  delete this._methodGroups[id];\n};\n\n/**\n * @return {ControlMethodGroup[]} List of control method groups\n */\nControls.prototype.methodGroups = function () {\n  var obj = {};\n  for (var id in this._methodGroups) {\n    obj[id] = this._methodGroups[id];\n  }\n  return obj;\n};\n\n/**\n * Enables all the control methods in the group\n * @param {String} groupId\n */\nControls.prototype.enableMethodGroup = function (id) {\n  var self = this;\n  self._methodGroups[id].forEach(function (methodId) {\n    self.enableMethod(methodId);\n  });\n};\n\n/**\n * Disables all the control methods in the group\n * @param {String} groupId\n */\nControls.prototype.disableMethodGroup = function (id) {\n  var self = this;\n  self._methodGroups[id].forEach(function (methodId) {\n    self.disableMethod(methodId);\n  });\n};\n\n/**\n * @returns {Boolean}\n */\nControls.prototype.enabled = function () {\n  return this._enabled;\n};\n\n/**\n * Enables the controls\n */\nControls.prototype.enable = function () {\n  if (this._enabled) {\n    return;\n  }\n  this._enabled = true;\n  if (this._activeCount > 0) {\n    this.emit('active');\n  }\n  this.emit('enabled');\n  this._updateComposer();\n};\n\n/**\n * Disables the controls\n */\nControls.prototype.disable = function () {\n  if (!this._enabled) {\n    return;\n  }\n  this._enabled = false;\n  if (this._activeCount > 0) {\n    this.emit('inactive');\n  }\n  this.emit('disabled');\n  this._updateComposer();\n};\n\n/**\n * Attaches the controls to a {@link RenderLoop}. The RenderLoop will be woken\n * up when the controls are activated\n *\n * @param {RenderLoop}\n */\nControls.prototype.attach = function (renderLoop) {\n  if (this._attachedRenderLoop) {\n    this.detach();\n  }\n  this._attachedRenderLoop = renderLoop;\n  this._beforeRenderHandler = this._updateViewsWithControls.bind(this);\n  this._changeHandler = renderLoop.renderOnNextFrame.bind(renderLoop);\n  this._attachedRenderLoop.addEventListener('beforeRender', this._beforeRenderHandler);\n  this._composer.addEventListener('change', this._changeHandler);\n};\n\n/**\n * Detaches the controls\n */\nControls.prototype.detach = function () {\n  if (!this._attachedRenderLoop) {\n    return;\n  }\n  this._attachedRenderLoop.removeEventListener('beforeRender', this._beforeRenderHandler);\n  this._composer.removeEventListener('change', this._changeHandler);\n  this._beforeRenderHandler = null;\n  this._changeHandler = null;\n  this._attachedRenderLoop = null;\n};\n\n/**\n * @param {Boolean}\n */\nControls.prototype.attached = function () {\n  return this._attachedRenderLoop != null;\n};\nControls.prototype._listen = function (id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('Bad method id');\n  }\n  method.instance.addEventListener('active', method.activeHandler);\n  method.instance.addEventListener('inactive', method.inactiveHandler);\n};\nControls.prototype._unlisten = function (id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('Bad method id');\n  }\n  method.instance.removeEventListener('active', method.activeHandler);\n  method.instance.removeEventListener('inactive', method.inactiveHandler);\n};\nControls.prototype._handleActive = function (id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('Bad method id');\n  }\n  if (!method.enabled) {\n    throw new Error('Should not receive event from disabled control method');\n  }\n  if (!method.active) {\n    method.active = true;\n    this._incrementActiveCount();\n  }\n};\nControls.prototype._handleInactive = function (id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('Bad method id');\n  }\n  if (!method.enabled) {\n    throw new Error('Should not receive event from disabled control method');\n  }\n  if (method.active) {\n    method.active = false;\n    this._decrementActiveCount();\n  }\n};\nControls.prototype._incrementActiveCount = function () {\n  this._activeCount++;\n  if (debug) {\n    this._checkActiveCount();\n  }\n  if (this._enabled && this._activeCount === 1) {\n    this.emit('active');\n  }\n};\nControls.prototype._decrementActiveCount = function () {\n  this._activeCount--;\n  if (debug) {\n    this._checkActiveCount();\n  }\n  if (this._enabled && this._activeCount === 0) {\n    this.emit('inactive');\n  }\n};\nControls.prototype._checkActiveCount = function () {\n  var count = 0;\n  for (var id in this._methods) {\n    var method = this._methods[id];\n    if (method.enabled && method.active) {\n      count++;\n    }\n  }\n  if (count != this._activeCount) {\n    throw new Error('Bad control state');\n  }\n};\nControls.prototype._updateComposer = function () {\n  var composer = this._composer;\n  for (var id in this._methods) {\n    var method = this._methods[id];\n    var enabled = this._enabled && method.enabled;\n    if (enabled && !composer.has(method.instance)) {\n      composer.add(method.instance);\n    }\n    if (!enabled && composer.has(method.instance)) {\n      composer.remove(method.instance);\n    }\n  }\n};\nControls.prototype._updateViewsWithControls = function () {\n  var controlData = this._composer.offsets();\n  if (controlData.changing) {\n    this._attachedRenderLoop.renderOnNextFrame();\n  }\n\n  // Update each view at most once, even when shared by multiple layers.\n  // The number of views is expected to be small, so use an array to keep track.\n  this.updatedViews_.length = 0;\n  var layers = this._attachedRenderLoop.stage().listLayers();\n  for (var i = 0; i < layers.length; i++) {\n    var view = layers[i].view();\n    if (this.updatedViews_.indexOf(view) < 0) {\n      layers[i].view().updateWithControlParameters(controlData.offsets);\n      this.updatedViews_.push(view);\n    }\n  }\n};\nmodule.exports = Controls;","map":{"version":3,"names":["eventEmitter","require","Composer","clearOwnProperties","debug","MARZIPANODEBUG","controls","Controls","opts","_methods","_methodGroups","_composer","_enabled","enabled","_activeCount","updatedViews_","_attachedRenderLoop","prototype","destroy","detach","methods","obj","id","method","registerMethod","instance","enable","Error","active","activeHandler","_handleActive","bind","inactiveHandler","_handleInactive","enableMethod","unregisterMethod","disableMethod","_incrementActiveCount","_listen","_updateComposer","emit","_decrementActiveCount","_unlisten","addMethodGroup","groupId","methodIds","removeMethodGroup","methodGroups","enableMethodGroup","self","forEach","methodId","disableMethodGroup","disable","attach","renderLoop","_beforeRenderHandler","_updateViewsWithControls","_changeHandler","renderOnNextFrame","addEventListener","removeEventListener","attached","_checkActiveCount","count","composer","has","add","remove","controlData","offsets","changing","length","layers","stage","listLayers","i","view","indexOf","updateWithControlParameters","push","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/controls/Controls.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Composer = require('./Composer');\nvar clearOwnProperties = require('../util/clearOwnProperties');\n\nvar debug = typeof MARZIPANODEBUG !== 'undefined' && MARZIPANODEBUG.controls;\n\n/**\n * @class Controls\n * @classdesc\n *\n * Set of controls which affect a view (e.g. keyboard, touch)\n *\n * {@link ControlMethod} instances can be registered on this class. The methods\n * are then combined to calculate the final parameters to change the {@link View}.\n *\n * Controls is attached to a {@link RenderLoop}. Currently it affects the\n * {@link view} of all {@link Layer} on the {@link Stage} of the\n * {@link RenderLoop} it is attached to. A more flexible API may be provided\n * in the future.\n *\n * The ControlMethod instances are registered with an id and may be enabled,\n * disabled and unregistered using that id. The whole Control can also be\n * enabled or disabled.\n *\n */\nfunction Controls(opts) {\n  opts = opts || {};\n\n  this._methods = {};\n  this._methodGroups = {};\n  this._composer = new Composer();\n\n  // Whether the controls are enabled.\n  this._enabled = (opts && opts.enabled) ? !!opts.enabled : true;\n\n  // How many control methods are enabled and in the active state.\n  this._activeCount = 0;\n\n  this.updatedViews_ = [];\n\n  this._attachedRenderLoop = null;\n}\n\neventEmitter(Controls);\n\n/**\n * Destructor.\n */\nControls.prototype.destroy = function() {\n  this.detach();\n  this._composer.destroy();\n  clearOwnProperties(this);\n};\n\n\n/**\n * @return {ControlMethod[]} List of registered @{link ControlMethod instances}\n */\nControls.prototype.methods = function() {\n  var obj = {};\n  for (var id in this._methods) {\n    obj[id] = this._methods[id];\n  }\n  return obj;\n};\n\n/**\n * @param {String} id\n * @return {ControlMethod}\n */\nControls.prototype.method = function(id) {\n  return this._methods[id];\n};\n\n/**\n * @param {String} id\n * @param {ControlMethod} instance\n * @param {Boolean} [enable=false]\n */\nControls.prototype.registerMethod = function(id, instance, enable) {\n  if (this._methods[id]) {\n    throw new Error('Control method already registered with id ' + id);\n  }\n\n  this._methods[id] = {\n    instance: instance,\n    enabled: false,\n    active: false,\n    activeHandler: this._handleActive.bind(this, id),\n    inactiveHandler: this._handleInactive.bind(this, id)\n  };\n\n  if(enable) {\n    this.enableMethod(id, instance);\n  }\n};\n\n\n/**\n * @param {String} id\n */\nControls.prototype.unregisterMethod = function(id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('No control method registered with id ' + id);\n  }\n  if (method.enabled) {\n    this.disableMethod(id);\n  }\n  delete this._methods[id];\n};\n\n/**\n * @param {String} id\n */\nControls.prototype.enableMethod = function(id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('No control method registered with id ' + id);\n  }\n  if (method.enabled) {\n    return;\n  }\n  method.enabled = true;\n  if (method.active) {\n    this._incrementActiveCount();\n  }\n  this._listen(id);\n  this._updateComposer();\n  this.emit('methodEnabled', id);\n};\n\n\n/**\n * @param {String} id\n */\nControls.prototype.disableMethod = function(id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('No control method registered with id ' + id);\n  }\n  if (!method.enabled) {\n    return;\n  }\n  method.enabled = false;\n  if (method.active) {\n    this._decrementActiveCount();\n  }\n  this._unlisten(id);\n  this._updateComposer();\n  this.emit('methodDisabled', id);\n};\n\n\n/**\n * Create a method group, which can be used to more conveniently enable or\n * disable several control methods at once\n * @param {String} groupId\n * @param {String[]} methodIds\n */\nControls.prototype.addMethodGroup = function(groupId, methodIds) {\n  this._methodGroups[groupId] = methodIds;\n}\n\n/**\n * @param {String} groupId\n */\nControls.prototype.removeMethodGroup = function(id) {\n  delete this._methodGroups[id];\n}\n\n/**\n * @return {ControlMethodGroup[]} List of control method groups\n */\nControls.prototype.methodGroups = function() {\n  var obj = {};\n  for (var id in this._methodGroups) {\n    obj[id] = this._methodGroups[id];\n  }\n  return obj;\n}\n\n/**\n * Enables all the control methods in the group\n * @param {String} groupId\n */\nControls.prototype.enableMethodGroup = function(id) {\n  var self = this;\n  self._methodGroups[id].forEach(function(methodId) {\n    self.enableMethod(methodId);\n  });\n}\n\n/**\n * Disables all the control methods in the group\n * @param {String} groupId\n */\nControls.prototype.disableMethodGroup = function(id) {\n  var self = this;\n  self._methodGroups[id].forEach(function(methodId) {\n    self.disableMethod(methodId);\n  });\n}\n\n/**\n * @returns {Boolean}\n */\nControls.prototype.enabled = function() {\n  return this._enabled;\n};\n\n/**\n * Enables the controls\n */\nControls.prototype.enable = function() {\n  if (this._enabled) {\n    return;\n  }\n  this._enabled = true;\n  if (this._activeCount > 0) {\n    this.emit('active');\n  }\n  this.emit('enabled');\n  this._updateComposer();\n};\n\n\n/**\n * Disables the controls\n */\nControls.prototype.disable = function() {\n  if (!this._enabled) {\n    return;\n  }\n  this._enabled = false;\n  if (this._activeCount > 0) {\n    this.emit('inactive');\n  }\n  this.emit('disabled');\n  this._updateComposer();\n};\n\n\n\n/**\n * Attaches the controls to a {@link RenderLoop}. The RenderLoop will be woken\n * up when the controls are activated\n *\n * @param {RenderLoop}\n */\nControls.prototype.attach = function(renderLoop) {\n  if (this._attachedRenderLoop) {\n    this.detach();\n  }\n\n  this._attachedRenderLoop = renderLoop;\n  this._beforeRenderHandler = this._updateViewsWithControls.bind(this);\n  this._changeHandler = renderLoop.renderOnNextFrame.bind(renderLoop);\n\n  this._attachedRenderLoop.addEventListener('beforeRender', this._beforeRenderHandler);\n  this._composer.addEventListener('change', this._changeHandler);\n};\n\n/**\n * Detaches the controls\n */\nControls.prototype.detach = function() {\n  if (!this._attachedRenderLoop) {\n    return;\n  }\n\n  this._attachedRenderLoop.removeEventListener('beforeRender', this._beforeRenderHandler);\n  this._composer.removeEventListener('change', this._changeHandler);\n\n  this._beforeRenderHandler = null;\n  this._changeHandler = null;\n  this._attachedRenderLoop = null;\n};\n\n/**\n * @param {Boolean}\n */\nControls.prototype.attached = function() {\n  return this._attachedRenderLoop != null;\n};\n\n\nControls.prototype._listen = function(id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('Bad method id');\n  }\n  method.instance.addEventListener('active', method.activeHandler);\n  method.instance.addEventListener('inactive', method.inactiveHandler);\n};\n\n\nControls.prototype._unlisten = function(id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('Bad method id');\n  }\n  method.instance.removeEventListener('active', method.activeHandler);\n  method.instance.removeEventListener('inactive', method.inactiveHandler);\n};\n\n\nControls.prototype._handleActive = function(id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('Bad method id');\n  }\n  if (!method.enabled) {\n    throw new Error('Should not receive event from disabled control method');\n  }\n  if (!method.active) {\n    method.active = true;\n    this._incrementActiveCount();\n  }\n};\n\n\nControls.prototype._handleInactive = function(id) {\n  var method = this._methods[id];\n  if (!method) {\n    throw new Error('Bad method id');\n  }\n  if (!method.enabled) {\n    throw new Error('Should not receive event from disabled control method');\n  }\n  if (method.active) {\n    method.active = false;\n    this._decrementActiveCount();\n  }\n};\n\n\nControls.prototype._incrementActiveCount = function() {\n  this._activeCount++;\n  if (debug) {\n    this._checkActiveCount();\n  }\n  if (this._enabled && this._activeCount === 1) {\n    this.emit('active');\n  }\n};\n\n\nControls.prototype._decrementActiveCount = function() {\n  this._activeCount--;\n  if (debug) {\n    this._checkActiveCount();\n  }\n  if (this._enabled && this._activeCount === 0) {\n    this.emit('inactive');\n  }\n};\n\n\nControls.prototype._checkActiveCount = function() {\n  var count = 0;\n  for (var id in this._methods) {\n    var method = this._methods[id];\n    if (method.enabled && method.active) {\n      count++;\n    }\n  }\n  if (count != this._activeCount) {\n    throw new Error('Bad control state');\n  }\n};\n\n\nControls.prototype._updateComposer = function() {\n  var composer = this._composer;\n\n  for (var id in this._methods) {\n    var method = this._methods[id];\n    var enabled = this._enabled && method.enabled;\n\n    if (enabled && !composer.has(method.instance)) {\n      composer.add(method.instance);\n    }\n    if (!enabled && composer.has(method.instance)) {\n      composer.remove(method.instance);\n    }\n  }\n};\n\n\nControls.prototype._updateViewsWithControls = function() {\n  var controlData = this._composer.offsets();\n  if (controlData.changing) {\n    this._attachedRenderLoop.renderOnNextFrame();\n  }\n\n  // Update each view at most once, even when shared by multiple layers.\n  // The number of views is expected to be small, so use an array to keep track.\n  this.updatedViews_.length = 0;\n\n  var layers = this._attachedRenderLoop.stage().listLayers();\n  for (var i = 0; i < layers.length; i++) {\n    var view = layers[i].view();\n    if (this.updatedViews_.indexOf(view) < 0) {\n      layers[i].view().updateWithControlParameters(controlData.offsets);\n      this.updatedViews_.push(view);\n    }\n  }\n};\n\n\nmodule.exports = Controls;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}