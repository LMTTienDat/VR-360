{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar defaults = require('../util/defaults');\nvar clearOwnProperties = require('../util/clearOwnProperties');\nvar defaultOpts = {\n  active: 'move',\n  inactive: 'default',\n  disabled: 'default'\n};\n\n/**\n * @class ControlCursor\n * @classdesc\n *\n * Sets the CSS cursor on a DOM element according to the state of a\n * {@link ControlMethod}.\n *\n * @param {Controls} controls Controls instance containing the control method.\n * @param {string} id ID of the control method.\n * @param {Element} element DOM element where the cursor should be set.\n * @param {Object} opts The control cursors. Each field must be a valid value\n *     for the `cursor` CSS property.\n * @param {string} [opts.active='move'] Cursor to set when the control method\n *     is enabled and active.\n * @param {string} [opts.inactive='default'] Cursor to set when the control\n *     method is enabled and inactive.\n * @param {string} [opts.disabled='default'] Cursor to set when the control\n *     method is disabled.\n */\nfunction ControlCursor(controls, id, element, opts) {\n  opts = defaults(opts || {}, defaultOpts);\n\n  // TODO: This class may misbehave if the control method is unregistered and a\n  // different control method is registered under the same id.\n\n  this._element = element;\n  this._controls = controls;\n  this._id = id;\n  this._attached = false;\n  this._setActiveCursor = this._setCursor.bind(this, opts.active);\n  this._setInactiveCursor = this._setCursor.bind(this, opts.inactive);\n  this._setDisabledCursor = this._setCursor.bind(this, opts.disabled);\n  this._setOriginalCursor = this._setCursor.bind(this, this._element.style.cursor);\n  this._updateAttachmentHandler = this._updateAttachment.bind(this);\n  controls.addEventListener('methodEnabled', this._updateAttachmentHandler);\n  controls.addEventListener('methodDisabled', this._updateAttachmentHandler);\n  controls.addEventListener('enabled', this._updateAttachmentHandler);\n  controls.addEventListener('disabled', this._updateAttachmentHandler);\n  this._updateAttachment();\n}\n\n/**\n * Destructor.\n */\nControlCursor.prototype.destroy = function () {\n  this._detachFromControlMethod(this._controls.method(this._id));\n  this._setOriginalCursor();\n  this._controls.removeEventListener('methodEnabled', this._updateAttachmentHandler);\n  this._controls.removeEventListener('methodDisabled', this._updateAttachmentHandler);\n  this._controls.removeEventListener('enabled', this._updateAttachmentHandler);\n  this._controls.removeEventListener('disabled', this._updateAttachmentHandler);\n  clearOwnProperties(this);\n};\nControlCursor.prototype._updateAttachment = function () {\n  var controls = this._controls;\n  var id = this._id;\n  if (controls.enabled() && controls.method(id).enabled) {\n    this._attachToControlMethod(controls.method(id));\n  } else {\n    this._detachFromControlMethod(controls.method(id));\n  }\n};\nControlCursor.prototype._attachToControlMethod = function (controlMethod) {\n  if (!this._attached) {\n    controlMethod.instance.addEventListener('active', this._setActiveCursor);\n    controlMethod.instance.addEventListener('inactive', this._setInactiveCursor);\n    if (controlMethod.active) {\n      this._setActiveCursor();\n    } else {\n      this._setInactiveCursor();\n    }\n    this._attached = true;\n  }\n};\nControlCursor.prototype._detachFromControlMethod = function (controlMethod) {\n  if (this._attached) {\n    controlMethod.instance.removeEventListener('active', this._setActiveCursor);\n    controlMethod.instance.removeEventListener('inactive', this._setInactiveCursor);\n    this._setDisabledCursor();\n    this._attached = false;\n  }\n};\nControlCursor.prototype._setCursor = function (cursor) {\n  this._element.style.cursor = cursor;\n};\nmodule.exports = ControlCursor;","map":{"version":3,"names":["defaults","require","clearOwnProperties","defaultOpts","active","inactive","disabled","ControlCursor","controls","id","element","opts","_element","_controls","_id","_attached","_setActiveCursor","_setCursor","bind","_setInactiveCursor","_setDisabledCursor","_setOriginalCursor","style","cursor","_updateAttachmentHandler","_updateAttachment","addEventListener","prototype","destroy","_detachFromControlMethod","method","removeEventListener","enabled","_attachToControlMethod","controlMethod","instance","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/controls/ControlCursor.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar defaults = require('../util/defaults');\nvar clearOwnProperties = require('../util/clearOwnProperties');\n\nvar defaultOpts = {\n  active: 'move',\n  inactive: 'default',\n  disabled: 'default'\n};\n\n/**\n * @class ControlCursor\n * @classdesc\n *\n * Sets the CSS cursor on a DOM element according to the state of a\n * {@link ControlMethod}.\n *\n * @param {Controls} controls Controls instance containing the control method.\n * @param {string} id ID of the control method.\n * @param {Element} element DOM element where the cursor should be set.\n * @param {Object} opts The control cursors. Each field must be a valid value\n *     for the `cursor` CSS property.\n * @param {string} [opts.active='move'] Cursor to set when the control method\n *     is enabled and active.\n * @param {string} [opts.inactive='default'] Cursor to set when the control\n *     method is enabled and inactive.\n * @param {string} [opts.disabled='default'] Cursor to set when the control\n *     method is disabled.\n */\nfunction ControlCursor(controls, id, element, opts) {\n  opts = defaults(opts || {}, defaultOpts);\n\n  // TODO: This class may misbehave if the control method is unregistered and a\n  // different control method is registered under the same id.\n\n  this._element = element;\n  this._controls = controls;\n  this._id = id;\n\n  this._attached = false;\n\n  this._setActiveCursor = this._setCursor.bind(this, opts.active);\n  this._setInactiveCursor = this._setCursor.bind(this, opts.inactive);\n  this._setDisabledCursor = this._setCursor.bind(this, opts.disabled);\n  this._setOriginalCursor = this._setCursor.bind(this, this._element.style.cursor);\n\n  this._updateAttachmentHandler = this._updateAttachment.bind(this);\n\n  controls.addEventListener('methodEnabled', this._updateAttachmentHandler);\n  controls.addEventListener('methodDisabled', this._updateAttachmentHandler);\n  controls.addEventListener('enabled', this._updateAttachmentHandler);\n  controls.addEventListener('disabled', this._updateAttachmentHandler);\n\n  this._updateAttachment();\n}\n\n/**\n * Destructor.\n */\nControlCursor.prototype.destroy = function() {\n  this._detachFromControlMethod(this._controls.method(this._id));\n  this._setOriginalCursor();\n\n  this._controls.removeEventListener('methodEnabled',\n      this._updateAttachmentHandler);\n  this._controls.removeEventListener('methodDisabled',\n      this._updateAttachmentHandler);\n  this._controls.removeEventListener('enabled',\n      this._updateAttachmentHandler);\n  this._controls.removeEventListener('disabled',\n      this._updateAttachmentHandler);\n\n  clearOwnProperties(this);\n};\n\nControlCursor.prototype._updateAttachment = function() {\n  var controls = this._controls;\n  var id = this._id;\n  if (controls.enabled() && controls.method(id).enabled) {\n    this._attachToControlMethod(controls.method(id));\n  } else {\n    this._detachFromControlMethod(controls.method(id));\n  }\n};\n\nControlCursor.prototype._attachToControlMethod = function(controlMethod) {\n  if (!this._attached) {\n    controlMethod.instance.addEventListener('active', this._setActiveCursor);\n    controlMethod.instance.addEventListener('inactive', this._setInactiveCursor);\n\n    if (controlMethod.active) {\n      this._setActiveCursor();\n    } else {\n      this._setInactiveCursor();\n    }\n\n    this._attached = true;\n  }\n};\n\nControlCursor.prototype._detachFromControlMethod = function(controlMethod) {\n  if (this._attached) {\n    controlMethod.instance.removeEventListener('active', this._setActiveCursor);\n    controlMethod.instance.removeEventListener('inactive', this._setInactiveCursor);\n\n    this._setDisabledCursor();\n\n    this._attached = false;\n  }\n};\n\nControlCursor.prototype._setCursor = function(cursor) {\n  this._element.style.cursor = cursor;\n}\n\nmodule.exports = ControlCursor;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC1C,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAE9D,IAAIE,WAAW,GAAG;EAChBC,MAAM,EAAE,MAAM;EACdC,QAAQ,EAAE,SAAS;EACnBC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,QAAQ,EAAEC,EAAE,EAAEC,OAAO,EAAEC,IAAI,EAAE;EAClDA,IAAI,GAAGX,QAAQ,CAACW,IAAI,IAAI,CAAC,CAAC,EAAER,WAAW,CAAC;;EAExC;EACA;;EAEA,IAAI,CAACS,QAAQ,GAAGF,OAAO;EACvB,IAAI,CAACG,SAAS,GAAGL,QAAQ;EACzB,IAAI,CAACM,GAAG,GAAGL,EAAE;EAEb,IAAI,CAACM,SAAS,GAAG,KAAK;EAEtB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,EAAEP,IAAI,CAACP,MAAM,CAAC;EAC/D,IAAI,CAACe,kBAAkB,GAAG,IAAI,CAACF,UAAU,CAACC,IAAI,CAAC,IAAI,EAAEP,IAAI,CAACN,QAAQ,CAAC;EACnE,IAAI,CAACe,kBAAkB,GAAG,IAAI,CAACH,UAAU,CAACC,IAAI,CAAC,IAAI,EAAEP,IAAI,CAACL,QAAQ,CAAC;EACnE,IAAI,CAACe,kBAAkB,GAAG,IAAI,CAACJ,UAAU,CAACC,IAAI,CAAC,IAAI,EAAE,IAAI,CAACN,QAAQ,CAACU,KAAK,CAACC,MAAM,CAAC;EAEhF,IAAI,CAACC,wBAAwB,GAAG,IAAI,CAACC,iBAAiB,CAACP,IAAI,CAAC,IAAI,CAAC;EAEjEV,QAAQ,CAACkB,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAACF,wBAAwB,CAAC;EACzEhB,QAAQ,CAACkB,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAACF,wBAAwB,CAAC;EAC1EhB,QAAQ,CAACkB,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACF,wBAAwB,CAAC;EACnEhB,QAAQ,CAACkB,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACF,wBAAwB,CAAC;EAEpE,IAAI,CAACC,iBAAiB,CAAC,CAAC;AAC1B;;AAEA;AACA;AACA;AACAlB,aAAa,CAACoB,SAAS,CAACC,OAAO,GAAG,YAAW;EAC3C,IAAI,CAACC,wBAAwB,CAAC,IAAI,CAAChB,SAAS,CAACiB,MAAM,CAAC,IAAI,CAAChB,GAAG,CAAC,CAAC;EAC9D,IAAI,CAACO,kBAAkB,CAAC,CAAC;EAEzB,IAAI,CAACR,SAAS,CAACkB,mBAAmB,CAAC,eAAe,EAC9C,IAAI,CAACP,wBAAwB,CAAC;EAClC,IAAI,CAACX,SAAS,CAACkB,mBAAmB,CAAC,gBAAgB,EAC/C,IAAI,CAACP,wBAAwB,CAAC;EAClC,IAAI,CAACX,SAAS,CAACkB,mBAAmB,CAAC,SAAS,EACxC,IAAI,CAACP,wBAAwB,CAAC;EAClC,IAAI,CAACX,SAAS,CAACkB,mBAAmB,CAAC,UAAU,EACzC,IAAI,CAACP,wBAAwB,CAAC;EAElCtB,kBAAkB,CAAC,IAAI,CAAC;AAC1B,CAAC;AAEDK,aAAa,CAACoB,SAAS,CAACF,iBAAiB,GAAG,YAAW;EACrD,IAAIjB,QAAQ,GAAG,IAAI,CAACK,SAAS;EAC7B,IAAIJ,EAAE,GAAG,IAAI,CAACK,GAAG;EACjB,IAAIN,QAAQ,CAACwB,OAAO,CAAC,CAAC,IAAIxB,QAAQ,CAACsB,MAAM,CAACrB,EAAE,CAAC,CAACuB,OAAO,EAAE;IACrD,IAAI,CAACC,sBAAsB,CAACzB,QAAQ,CAACsB,MAAM,CAACrB,EAAE,CAAC,CAAC;EAClD,CAAC,MAAM;IACL,IAAI,CAACoB,wBAAwB,CAACrB,QAAQ,CAACsB,MAAM,CAACrB,EAAE,CAAC,CAAC;EACpD;AACF,CAAC;AAEDF,aAAa,CAACoB,SAAS,CAACM,sBAAsB,GAAG,UAASC,aAAa,EAAE;EACvE,IAAI,CAAC,IAAI,CAACnB,SAAS,EAAE;IACnBmB,aAAa,CAACC,QAAQ,CAACT,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACV,gBAAgB,CAAC;IACxEkB,aAAa,CAACC,QAAQ,CAACT,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACP,kBAAkB,CAAC;IAE5E,IAAIe,aAAa,CAAC9B,MAAM,EAAE;MACxB,IAAI,CAACY,gBAAgB,CAAC,CAAC;IACzB,CAAC,MAAM;MACL,IAAI,CAACG,kBAAkB,CAAC,CAAC;IAC3B;IAEA,IAAI,CAACJ,SAAS,GAAG,IAAI;EACvB;AACF,CAAC;AAEDR,aAAa,CAACoB,SAAS,CAACE,wBAAwB,GAAG,UAASK,aAAa,EAAE;EACzE,IAAI,IAAI,CAACnB,SAAS,EAAE;IAClBmB,aAAa,CAACC,QAAQ,CAACJ,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACf,gBAAgB,CAAC;IAC3EkB,aAAa,CAACC,QAAQ,CAACJ,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAACZ,kBAAkB,CAAC;IAE/E,IAAI,CAACC,kBAAkB,CAAC,CAAC;IAEzB,IAAI,CAACL,SAAS,GAAG,KAAK;EACxB;AACF,CAAC;AAEDR,aAAa,CAACoB,SAAS,CAACV,UAAU,GAAG,UAASM,MAAM,EAAE;EACpD,IAAI,CAACX,QAAQ,CAACU,KAAK,CAACC,MAAM,GAAGA,MAAM;AACrC,CAAC;AAEDa,MAAM,CAACC,OAAO,GAAG9B,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}