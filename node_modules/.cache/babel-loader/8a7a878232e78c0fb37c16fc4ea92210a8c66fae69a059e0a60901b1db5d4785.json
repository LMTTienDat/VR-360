{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar clearOwnProperties = require('../util/clearOwnProperties');\n\n/**\n * @class ElementPressControlMethod\n * @implements ControlMethod\n * @classdesc\n *\n * Sets the velocity and friction of a single parameter by pressing and\n * unpressing a DOM element.\n *\n * @param {Element} element Element which activates the method when pressed\n * @param {string} parameter The parameter to be controlled (e.g. `x`, `y` or `zoom`)\n * @param {number} velocity Velocity at which the parameter changes. Use a\n * negative number for opposite direction\n * @param {number} friction Friction at which the parameter stops\n*/\nfunction ElementPressControlMethod(element, parameter, velocity, friction) {\n  if (!element) {\n    throw new Error(\"ElementPressControlMethod: element must be defined\");\n  }\n  if (!parameter) {\n    throw new Error(\"ElementPressControlMethod: parameter must be defined\");\n  }\n  if (!velocity) {\n    throw new Error(\"ElementPressControlMethod: velocity must be defined\");\n  }\n  if (!friction) {\n    throw new Error(\"ElementPressControlMethod: friction must be defined\");\n  }\n  this._element = element;\n  this._pressHandler = this._handlePress.bind(this);\n  this._releaseHandler = this._handleRelease.bind(this);\n  element.addEventListener('mousedown', this._pressHandler);\n  element.addEventListener('mouseup', this._releaseHandler);\n  element.addEventListener('mouseleave', this._releaseHandler);\n  element.addEventListener('touchstart', this._pressHandler);\n  element.addEventListener('touchmove', this._releaseHandler);\n  element.addEventListener('touchend', this._releaseHandler);\n  this._parameter = parameter;\n  this._velocity = velocity;\n  this._friction = friction;\n  this._dynamics = new Dynamics();\n  this._pressing = false;\n}\neventEmitter(ElementPressControlMethod);\n\n/**\n * Destructor.\n */\nElementPressControlMethod.prototype.destroy = function () {\n  this._element.removeEventListener('mousedown', this._pressHandler);\n  this._element.removeEventListener('mouseup', this._releaseHandler);\n  this._element.removeEventListener('mouseleave', this._releaseHandler);\n  this._element.removeEventListener('touchstart', this._pressHandler);\n  this._element.removeEventListener('touchmove', this._releaseHandler);\n  this._element.removeEventListener('touchend', this._releaseHandler);\n  clearOwnProperties(this);\n};\nElementPressControlMethod.prototype._handlePress = function () {\n  this._pressing = true;\n  this._dynamics.velocity = this._velocity;\n  this._dynamics.friction = 0;\n  this.emit('parameterDynamics', this._parameter, this._dynamics);\n  this.emit('active');\n};\nElementPressControlMethod.prototype._handleRelease = function () {\n  if (this._pressing) {\n    this._dynamics.friction = this._friction;\n    this.emit('parameterDynamics', this._parameter, this._dynamics);\n    this.emit('inactive');\n  }\n  this._pressing = false;\n};\nmodule.exports = ElementPressControlMethod;","map":{"version":3,"names":["eventEmitter","require","Dynamics","clearOwnProperties","ElementPressControlMethod","element","parameter","velocity","friction","Error","_element","_pressHandler","_handlePress","bind","_releaseHandler","_handleRelease","addEventListener","_parameter","_velocity","_friction","_dynamics","_pressing","prototype","destroy","removeEventListener","emit","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/controls/ElementPress.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar clearOwnProperties = require('../util/clearOwnProperties');\n\n/**\n * @class ElementPressControlMethod\n * @implements ControlMethod\n * @classdesc\n *\n * Sets the velocity and friction of a single parameter by pressing and\n * unpressing a DOM element.\n *\n * @param {Element} element Element which activates the method when pressed\n * @param {string} parameter The parameter to be controlled (e.g. `x`, `y` or `zoom`)\n * @param {number} velocity Velocity at which the parameter changes. Use a\n * negative number for opposite direction\n * @param {number} friction Friction at which the parameter stops\n*/\nfunction ElementPressControlMethod(element, parameter, velocity, friction) {\n  if(!element) {\n    throw new Error(\"ElementPressControlMethod: element must be defined\");\n  }\n  if(!parameter) {\n    throw new Error(\"ElementPressControlMethod: parameter must be defined\");\n  }\n  if(!velocity) {\n    throw new Error(\"ElementPressControlMethod: velocity must be defined\");\n  }\n  if(!friction) {\n    throw new Error(\"ElementPressControlMethod: friction must be defined\");\n  }\n\n  this._element = element;\n\n  this._pressHandler = this._handlePress.bind(this);\n  this._releaseHandler = this._handleRelease.bind(this);\n\n  element.addEventListener('mousedown', this._pressHandler);\n  element.addEventListener('mouseup', this._releaseHandler);\n  element.addEventListener('mouseleave', this._releaseHandler);\n  element.addEventListener('touchstart', this._pressHandler);\n  element.addEventListener('touchmove', this._releaseHandler);\n  element.addEventListener('touchend', this._releaseHandler);\n\n  this._parameter = parameter;\n  this._velocity = velocity;\n  this._friction = friction;\n  this._dynamics = new Dynamics();\n\n  this._pressing = false;\n}\neventEmitter(ElementPressControlMethod);\n\n/**\n * Destructor.\n */\nElementPressControlMethod.prototype.destroy = function() {\n  this._element.removeEventListener('mousedown', this._pressHandler);\n  this._element.removeEventListener('mouseup', this._releaseHandler);\n  this._element.removeEventListener('mouseleave', this._releaseHandler);\n  this._element.removeEventListener('touchstart', this._pressHandler);\n  this._element.removeEventListener('touchmove', this._releaseHandler);\n  this._element.removeEventListener('touchend', this._releaseHandler);\n  clearOwnProperties(this);\n};\n\nElementPressControlMethod.prototype._handlePress = function() {\n  this._pressing = true;\n\n  this._dynamics.velocity = this._velocity;\n  this._dynamics.friction = 0;\n  this.emit('parameterDynamics', this._parameter, this._dynamics);\n  this.emit('active');\n};\n\nElementPressControlMethod.prototype._handleRelease = function() {\n  if(this._pressing) {\n    this._dynamics.friction = this._friction;\n    this.emit('parameterDynamics', this._parameter, this._dynamics);\n    this.emit('inactive');\n  }\n\n  this._pressing = false;\n};\n\nmodule.exports = ElementPressControlMethod;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}