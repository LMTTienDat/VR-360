{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar inherits = require('../util/inherits');\nvar hash = require('../util/hash');\nvar cmp = require('../util/cmp');\nvar common = require('./common');\nvar Level = require('./Level');\nvar type = require('../util/type');\n\n/**\n * @class EquirectTile\n * @implements Tile\n * @classdesc\n *\n * A tile in an @{EquirectGeometry}.\n */\nfunction EquirectTile(z, geometry) {\n  this.z = z;\n  this._geometry = geometry;\n  this._level = geometry.levelList[z];\n}\nEquirectTile.prototype.rotX = function () {\n  return 0;\n};\nEquirectTile.prototype.rotY = function () {\n  return 0;\n};\nEquirectTile.prototype.centerX = function () {\n  return 0.5;\n};\nEquirectTile.prototype.centerY = function () {\n  return 0.5;\n};\nEquirectTile.prototype.scaleX = function () {\n  return 1;\n};\nEquirectTile.prototype.scaleY = function () {\n  return 1;\n};\nEquirectTile.prototype.parent = function () {\n  if (this.z === 0) {\n    return null;\n  }\n  return new EquirectTile(this.z - 1, this._geometry);\n};\nEquirectTile.prototype.children = function (result) {\n  if (this.z === this._geometry.levelList.length - 1) {\n    return null;\n  }\n  result = result || [];\n  result.push(new EquirectTile(this.z + 1, this._geometry));\n  return result;\n};\nEquirectTile.prototype.neighbors = function () {\n  return [];\n};\nEquirectTile.prototype.hash = function () {\n  return hash(this.z);\n};\nEquirectTile.prototype.equals = function (that) {\n  return this._geometry === that._geometry && this.z === that.z;\n};\nEquirectTile.prototype.cmp = function (that) {\n  return cmp(this.z, that.z);\n};\nEquirectTile.prototype.str = function () {\n  return 'EquirectTile(' + tile.z + ')';\n};\nfunction EquirectLevel(levelProperties) {\n  this.constructor.super_.call(this, levelProperties);\n  this._width = levelProperties.width;\n}\ninherits(EquirectLevel, Level);\nEquirectLevel.prototype.width = function () {\n  return this._width;\n};\nEquirectLevel.prototype.height = function () {\n  return this._width / 2;\n};\nEquirectLevel.prototype.tileWidth = function () {\n  return this._width;\n};\nEquirectLevel.prototype.tileHeight = function () {\n  return this._width / 2;\n};\n\n/**\n * @class EquirectGeometry\n * @implements Geometry\n * @classdesc\n *\n * A {@link Geometry} implementation suitable for equirectangular images with a\n * 2:1 aspect ratio.\n *\n * @param {Object[]} levelPropertiesList Level description\n * @param {number} levelPropertiesList[].width Level width in pixels\n*/\nfunction EquirectGeometry(levelPropertiesList) {\n  if (type(levelPropertiesList) !== 'array') {\n    throw new Error('Level list must be an array');\n  }\n  this.levelList = common.makeLevelList(levelPropertiesList, EquirectLevel);\n  this.selectableLevelList = common.makeSelectableLevelList(this.levelList);\n}\nEquirectGeometry.prototype.maxTileSize = function () {\n  var maxTileSize = 0;\n  for (var i = 0; i < this.levelList.length; i++) {\n    var level = this.levelList[i];\n    maxTileSize = Math.max(maxTileSize, level.tileWidth, level.tileHeight);\n  }\n  return maxTileSize;\n};\nEquirectGeometry.prototype.levelTiles = function (level, result) {\n  var levelIndex = this.levelList.indexOf(level);\n  result = result || [];\n  result.push(new EquirectTile(levelIndex, this));\n  return result;\n};\nEquirectGeometry.prototype.visibleTiles = function (view, level, result) {\n  var tile = new EquirectTile(this.levelList.indexOf(level), this);\n  result = result || [];\n  result.length = 0;\n  result.push(tile);\n};\nEquirectGeometry.Tile = EquirectGeometry.prototype.Tile = EquirectTile;\nEquirectGeometry.type = EquirectGeometry.prototype.type = 'equirect';\nEquirectTile.type = EquirectTile.prototype.type = 'equirect';\nmodule.exports = EquirectGeometry;","map":{"version":3,"names":["inherits","require","hash","cmp","common","Level","type","EquirectTile","z","geometry","_geometry","_level","levelList","prototype","rotX","rotY","centerX","centerY","scaleX","scaleY","parent","children","result","length","push","neighbors","equals","that","str","tile","EquirectLevel","levelProperties","constructor","super_","call","_width","width","height","tileWidth","tileHeight","EquirectGeometry","levelPropertiesList","Error","makeLevelList","selectableLevelList","makeSelectableLevelList","maxTileSize","i","level","Math","max","levelTiles","levelIndex","indexOf","visibleTiles","view","Tile","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/geometries/Equirect.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar inherits = require('../util/inherits');\nvar hash = require('../util/hash');\nvar cmp = require('../util/cmp');\nvar common = require('./common');\nvar Level = require('./Level');\nvar type = require('../util/type');\n\n\n/**\n * @class EquirectTile\n * @implements Tile\n * @classdesc\n *\n * A tile in an @{EquirectGeometry}.\n */\nfunction EquirectTile(z, geometry) {\n  this.z = z;\n  this._geometry = geometry;\n  this._level = geometry.levelList[z];\n}\n\n\nEquirectTile.prototype.rotX = function() {\n  return 0;\n};\n\n\nEquirectTile.prototype.rotY = function() {\n  return 0;\n};\n\n\nEquirectTile.prototype.centerX = function() {\n  return 0.5;\n};\n\n\nEquirectTile.prototype.centerY = function() {\n  return 0.5;\n};\n\n\nEquirectTile.prototype.scaleX = function() {\n  return 1;\n};\n\n\nEquirectTile.prototype.scaleY = function() {\n  return 1;\n};\n\n\nEquirectTile.prototype.parent = function() {\n  if (this.z === 0) {\n    return null;\n  }\n  return new EquirectTile(this.z - 1, this._geometry);\n};\n\n\nEquirectTile.prototype.children = function(result) {\n  if (this.z === this._geometry.levelList.length - 1) {\n    return null;\n  }\n  result = result || [];\n  result.push(new EquirectTile(this.z + 1, this._geometry));\n  return result;\n};\n\n\nEquirectTile.prototype.neighbors = function() {\n  return [];\n};\n\n\nEquirectTile.prototype.hash = function() {\n  return hash(this.z);\n};\n\n\nEquirectTile.prototype.equals = function(that) {\n  return this._geometry === that._geometry && this.z === that.z;\n};\n\n\nEquirectTile.prototype.cmp = function(that) {\n  return cmp(this.z, that.z);\n};\n\n\nEquirectTile.prototype.str = function() {\n  return 'EquirectTile(' + tile.z + ')';\n};\n\n\nfunction EquirectLevel(levelProperties) {\n  this.constructor.super_.call(this, levelProperties);\n  this._width = levelProperties.width;\n}\n\ninherits(EquirectLevel, Level);\n\n\nEquirectLevel.prototype.width = function() {\n  return this._width;\n};\n\n\nEquirectLevel.prototype.height = function() {\n  return this._width/2;\n};\n\n\nEquirectLevel.prototype.tileWidth = function() {\n  return this._width;\n};\n\n\nEquirectLevel.prototype.tileHeight = function() {\n  return this._width/2;\n};\n\n\n/**\n * @class EquirectGeometry\n * @implements Geometry\n * @classdesc\n *\n * A {@link Geometry} implementation suitable for equirectangular images with a\n * 2:1 aspect ratio.\n *\n * @param {Object[]} levelPropertiesList Level description\n * @param {number} levelPropertiesList[].width Level width in pixels\n*/\nfunction EquirectGeometry(levelPropertiesList) {\n  if (type(levelPropertiesList) !== 'array') {\n    throw new Error('Level list must be an array');\n  }\n\n  this.levelList = common.makeLevelList(levelPropertiesList, EquirectLevel);\n  this.selectableLevelList = common.makeSelectableLevelList(this.levelList);\n}\n\n\nEquirectGeometry.prototype.maxTileSize = function() {\n  var maxTileSize = 0;\n  for (var i = 0; i < this.levelList.length; i++) {\n    var level = this.levelList[i];\n    maxTileSize = Math.max(maxTileSize, level.tileWidth, level.tileHeight);\n  }\n  return maxTileSize;\n};\n\n\nEquirectGeometry.prototype.levelTiles = function(level, result) {\n  var levelIndex = this.levelList.indexOf(level);\n  result = result || [];\n  result.push(new EquirectTile(levelIndex, this));\n  return result;\n};\n\n\nEquirectGeometry.prototype.visibleTiles = function(view, level, result) {\n  var tile = new EquirectTile(this.levelList.indexOf(level), this);\n  result = result || [];\n  result.length = 0;\n  result.push(tile);\n};\n\n\nEquirectGeometry.Tile = EquirectGeometry.prototype.Tile = EquirectTile;\nEquirectGeometry.type = EquirectGeometry.prototype.type = 'equirect';\nEquirectTile.type = EquirectTile.prototype.type = 'equirect';\n\n\nmodule.exports = EquirectGeometry;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC1C,IAAIC,IAAI,GAAGD,OAAO,CAAC,cAAc,CAAC;AAClC,IAAIE,GAAG,GAAGF,OAAO,CAAC,aAAa,CAAC;AAChC,IAAIG,MAAM,GAAGH,OAAO,CAAC,UAAU,CAAC;AAChC,IAAII,KAAK,GAAGJ,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIK,IAAI,GAAGL,OAAO,CAAC,cAAc,CAAC;;AAGlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,YAAYA,CAACC,CAAC,EAAEC,QAAQ,EAAE;EACjC,IAAI,CAACD,CAAC,GAAGA,CAAC;EACV,IAAI,CAACE,SAAS,GAAGD,QAAQ;EACzB,IAAI,CAACE,MAAM,GAAGF,QAAQ,CAACG,SAAS,CAACJ,CAAC,CAAC;AACrC;AAGAD,YAAY,CAACM,SAAS,CAACC,IAAI,GAAG,YAAW;EACvC,OAAO,CAAC;AACV,CAAC;AAGDP,YAAY,CAACM,SAAS,CAACE,IAAI,GAAG,YAAW;EACvC,OAAO,CAAC;AACV,CAAC;AAGDR,YAAY,CAACM,SAAS,CAACG,OAAO,GAAG,YAAW;EAC1C,OAAO,GAAG;AACZ,CAAC;AAGDT,YAAY,CAACM,SAAS,CAACI,OAAO,GAAG,YAAW;EAC1C,OAAO,GAAG;AACZ,CAAC;AAGDV,YAAY,CAACM,SAAS,CAACK,MAAM,GAAG,YAAW;EACzC,OAAO,CAAC;AACV,CAAC;AAGDX,YAAY,CAACM,SAAS,CAACM,MAAM,GAAG,YAAW;EACzC,OAAO,CAAC;AACV,CAAC;AAGDZ,YAAY,CAACM,SAAS,CAACO,MAAM,GAAG,YAAW;EACzC,IAAI,IAAI,CAACZ,CAAC,KAAK,CAAC,EAAE;IAChB,OAAO,IAAI;EACb;EACA,OAAO,IAAID,YAAY,CAAC,IAAI,CAACC,CAAC,GAAG,CAAC,EAAE,IAAI,CAACE,SAAS,CAAC;AACrD,CAAC;AAGDH,YAAY,CAACM,SAAS,CAACQ,QAAQ,GAAG,UAASC,MAAM,EAAE;EACjD,IAAI,IAAI,CAACd,CAAC,KAAK,IAAI,CAACE,SAAS,CAACE,SAAS,CAACW,MAAM,GAAG,CAAC,EAAE;IAClD,OAAO,IAAI;EACb;EACAD,MAAM,GAAGA,MAAM,IAAI,EAAE;EACrBA,MAAM,CAACE,IAAI,CAAC,IAAIjB,YAAY,CAAC,IAAI,CAACC,CAAC,GAAG,CAAC,EAAE,IAAI,CAACE,SAAS,CAAC,CAAC;EACzD,OAAOY,MAAM;AACf,CAAC;AAGDf,YAAY,CAACM,SAAS,CAACY,SAAS,GAAG,YAAW;EAC5C,OAAO,EAAE;AACX,CAAC;AAGDlB,YAAY,CAACM,SAAS,CAACX,IAAI,GAAG,YAAW;EACvC,OAAOA,IAAI,CAAC,IAAI,CAACM,CAAC,CAAC;AACrB,CAAC;AAGDD,YAAY,CAACM,SAAS,CAACa,MAAM,GAAG,UAASC,IAAI,EAAE;EAC7C,OAAO,IAAI,CAACjB,SAAS,KAAKiB,IAAI,CAACjB,SAAS,IAAI,IAAI,CAACF,CAAC,KAAKmB,IAAI,CAACnB,CAAC;AAC/D,CAAC;AAGDD,YAAY,CAACM,SAAS,CAACV,GAAG,GAAG,UAASwB,IAAI,EAAE;EAC1C,OAAOxB,GAAG,CAAC,IAAI,CAACK,CAAC,EAAEmB,IAAI,CAACnB,CAAC,CAAC;AAC5B,CAAC;AAGDD,YAAY,CAACM,SAAS,CAACe,GAAG,GAAG,YAAW;EACtC,OAAO,eAAe,GAAGC,IAAI,CAACrB,CAAC,GAAG,GAAG;AACvC,CAAC;AAGD,SAASsB,aAAaA,CAACC,eAAe,EAAE;EACtC,IAAI,CAACC,WAAW,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,EAAEH,eAAe,CAAC;EACnD,IAAI,CAACI,MAAM,GAAGJ,eAAe,CAACK,KAAK;AACrC;AAEApC,QAAQ,CAAC8B,aAAa,EAAEzB,KAAK,CAAC;AAG9ByB,aAAa,CAACjB,SAAS,CAACuB,KAAK,GAAG,YAAW;EACzC,OAAO,IAAI,CAACD,MAAM;AACpB,CAAC;AAGDL,aAAa,CAACjB,SAAS,CAACwB,MAAM,GAAG,YAAW;EAC1C,OAAO,IAAI,CAACF,MAAM,GAAC,CAAC;AACtB,CAAC;AAGDL,aAAa,CAACjB,SAAS,CAACyB,SAAS,GAAG,YAAW;EAC7C,OAAO,IAAI,CAACH,MAAM;AACpB,CAAC;AAGDL,aAAa,CAACjB,SAAS,CAAC0B,UAAU,GAAG,YAAW;EAC9C,OAAO,IAAI,CAACJ,MAAM,GAAC,CAAC;AACtB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,gBAAgBA,CAACC,mBAAmB,EAAE;EAC7C,IAAInC,IAAI,CAACmC,mBAAmB,CAAC,KAAK,OAAO,EAAE;IACzC,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,IAAI,CAAC9B,SAAS,GAAGR,MAAM,CAACuC,aAAa,CAACF,mBAAmB,EAAEX,aAAa,CAAC;EACzE,IAAI,CAACc,mBAAmB,GAAGxC,MAAM,CAACyC,uBAAuB,CAAC,IAAI,CAACjC,SAAS,CAAC;AAC3E;AAGA4B,gBAAgB,CAAC3B,SAAS,CAACiC,WAAW,GAAG,YAAW;EAClD,IAAIA,WAAW,GAAG,CAAC;EACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACnC,SAAS,CAACW,MAAM,EAAEwB,CAAC,EAAE,EAAE;IAC9C,IAAIC,KAAK,GAAG,IAAI,CAACpC,SAAS,CAACmC,CAAC,CAAC;IAC7BD,WAAW,GAAGG,IAAI,CAACC,GAAG,CAACJ,WAAW,EAAEE,KAAK,CAACV,SAAS,EAAEU,KAAK,CAACT,UAAU,CAAC;EACxE;EACA,OAAOO,WAAW;AACpB,CAAC;AAGDN,gBAAgB,CAAC3B,SAAS,CAACsC,UAAU,GAAG,UAASH,KAAK,EAAE1B,MAAM,EAAE;EAC9D,IAAI8B,UAAU,GAAG,IAAI,CAACxC,SAAS,CAACyC,OAAO,CAACL,KAAK,CAAC;EAC9C1B,MAAM,GAAGA,MAAM,IAAI,EAAE;EACrBA,MAAM,CAACE,IAAI,CAAC,IAAIjB,YAAY,CAAC6C,UAAU,EAAE,IAAI,CAAC,CAAC;EAC/C,OAAO9B,MAAM;AACf,CAAC;AAGDkB,gBAAgB,CAAC3B,SAAS,CAACyC,YAAY,GAAG,UAASC,IAAI,EAAEP,KAAK,EAAE1B,MAAM,EAAE;EACtE,IAAIO,IAAI,GAAG,IAAItB,YAAY,CAAC,IAAI,CAACK,SAAS,CAACyC,OAAO,CAACL,KAAK,CAAC,EAAE,IAAI,CAAC;EAChE1B,MAAM,GAAGA,MAAM,IAAI,EAAE;EACrBA,MAAM,CAACC,MAAM,GAAG,CAAC;EACjBD,MAAM,CAACE,IAAI,CAACK,IAAI,CAAC;AACnB,CAAC;AAGDW,gBAAgB,CAACgB,IAAI,GAAGhB,gBAAgB,CAAC3B,SAAS,CAAC2C,IAAI,GAAGjD,YAAY;AACtEiC,gBAAgB,CAAClC,IAAI,GAAGkC,gBAAgB,CAAC3B,SAAS,CAACP,IAAI,GAAG,UAAU;AACpEC,YAAY,CAACD,IAAI,GAAGC,YAAY,CAACM,SAAS,CAACP,IAAI,GAAG,UAAU;AAG5DmD,MAAM,CAACC,OAAO,GAAGlB,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}