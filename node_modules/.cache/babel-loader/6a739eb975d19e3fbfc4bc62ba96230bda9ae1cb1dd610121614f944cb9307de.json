{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar now = require('../util/now');\nfunction WorkTask(fn, cb) {\n  this.fn = fn;\n  this.cb = cb;\n  this.cfn = null;\n}\nfunction WorkQueue(opts) {\n  this._queue = [];\n  this._delay = opts && opts.delay || 0;\n  this._paused = opts && !!opts.paused || false;\n  this._currentTask = null;\n  this._lastFinished = null;\n}\nWorkQueue.prototype.length = function () {\n  return this._queue.length;\n};\nWorkQueue.prototype.push = function (fn, cb) {\n  var task = new WorkTask(fn, cb);\n  var cancel = this._cancel.bind(this, task);\n\n  // Push the task into the queue.\n  this._queue.push(task);\n\n  // Run the task if idle.\n  this._next();\n  return cancel;\n};\nWorkQueue.prototype.pause = function () {\n  if (!this._paused) {\n    this._paused = true;\n  }\n};\nWorkQueue.prototype.resume = function () {\n  if (this._paused) {\n    this._paused = false;\n    this._next();\n  }\n};\nWorkQueue.prototype._start = function (task) {\n  // Consistency check.\n  if (this._currentTask) {\n    throw new Error('WorkQueue: called start while running task');\n  }\n\n  // Mark queue as busy, so that concurrent tasks wait.\n  this._currentTask = task;\n\n  // Execute the task.\n  var finish = this._finish.bind(this, task);\n  task.cfn = task.fn(finish);\n\n  // Detect when a non-cancellable function has been queued.\n  if (typeof task.cfn !== 'function') {\n    throw new Error('WorkQueue: function is not cancellable');\n  }\n};\nWorkQueue.prototype._finish = function (task) {\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  // Consistency check.\n  if (this._currentTask !== task) {\n    throw new Error('WorkQueue: called finish on wrong task');\n  }\n\n  // Call the task callback on the return values.\n  task.cb.apply(null, args);\n\n  // Mark as not busy and record task finish time, then advance to next task.\n  this._currentTask = null;\n  this._lastFinished = now();\n  this._next();\n};\nWorkQueue.prototype._cancel = function (task) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  if (this._currentTask === task) {\n    // Cancel running task. Because cancel passes control to the _finish\n    // callback we passed into fn, the cleanup logic will be handled there.\n    task.cfn.apply(null, args);\n  } else {\n    // Remove task from queue.\n    var pos = this._queue.indexOf(task);\n    if (pos >= 0) {\n      this._queue.splice(pos, 1);\n      task.cb.apply(null, args);\n    }\n  }\n};\nWorkQueue.prototype._next = function () {\n  if (this._paused) {\n    // Do not start tasks while paused.\n    return;\n  }\n  if (!this._queue.length) {\n    // No tasks to run.\n    return;\n  }\n  if (this._currentTask) {\n    // Will be called again when the current task finishes.\n    return;\n  }\n  if (this._lastFinished != null) {\n    var elapsed = now() - this._lastFinished;\n    var remaining = this._delay - elapsed;\n    if (remaining > 0) {\n      // Too soon. Run again after the inter-task delay.\n      setTimeout(this._next.bind(this), remaining);\n      return;\n    }\n  }\n\n  // Run the next task.\n  var task = this._queue.shift();\n  this._start(task);\n};\nmodule.exports = WorkQueue;","map":{"version":3,"names":["now","require","WorkTask","fn","cb","cfn","WorkQueue","opts","_queue","_delay","delay","_paused","paused","_currentTask","_lastFinished","prototype","length","push","task","cancel","_cancel","bind","_next","pause","resume","_start","Error","finish","_finish","args","Array","slice","call","arguments","apply","pos","indexOf","splice","elapsed","remaining","setTimeout","shift","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/collections/WorkQueue.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar now = require('../util/now');\n\n\nfunction WorkTask(fn, cb) {\n  this.fn = fn;\n  this.cb = cb;\n  this.cfn = null;\n}\n\n\nfunction WorkQueue(opts) {\n  this._queue = [];\n  this._delay = opts && opts.delay || 0;\n  this._paused = opts && !!opts.paused || false;\n  this._currentTask = null;\n  this._lastFinished = null;\n}\n\n\nWorkQueue.prototype.length = function() {\n  return this._queue.length;\n};\n\n\nWorkQueue.prototype.push = function(fn, cb) {\n\n  var task = new WorkTask(fn, cb);\n\n  var cancel = this._cancel.bind(this, task);\n\n  // Push the task into the queue.\n  this._queue.push(task);\n\n  // Run the task if idle.\n  this._next();\n\n  return cancel;\n\n};\n\n\nWorkQueue.prototype.pause = function() {\n  if (!this._paused) {\n    this._paused = true;\n  }\n};\n\n\nWorkQueue.prototype.resume = function() {\n  if (this._paused) {\n    this._paused = false;\n    this._next();\n  }\n};\n\n\nWorkQueue.prototype._start = function(task) {\n\n  // Consistency check.\n  if (this._currentTask) {\n    throw new Error('WorkQueue: called start while running task');\n  }\n\n  // Mark queue as busy, so that concurrent tasks wait.\n  this._currentTask = task;\n\n  // Execute the task.\n  var finish = this._finish.bind(this, task);\n  task.cfn = task.fn(finish);\n\n  // Detect when a non-cancellable function has been queued.\n  if (typeof task.cfn !== 'function') {\n    throw new Error('WorkQueue: function is not cancellable');\n  }\n\n};\n\n\nWorkQueue.prototype._finish = function(task) {\n\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  // Consistency check.\n  if (this._currentTask !== task) {\n    throw new Error('WorkQueue: called finish on wrong task');\n  }\n\n  // Call the task callback on the return values.\n  task.cb.apply(null, args);\n\n  // Mark as not busy and record task finish time, then advance to next task.\n  this._currentTask = null;\n  this._lastFinished = now();\n  this._next();\n\n};\n\n\nWorkQueue.prototype._cancel = function(task) {\n\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  if (this._currentTask === task) {\n\n    // Cancel running task. Because cancel passes control to the _finish\n    // callback we passed into fn, the cleanup logic will be handled there.\n    task.cfn.apply(null, args);\n\n  } else {\n\n    // Remove task from queue.\n    var pos = this._queue.indexOf(task);\n    if (pos >= 0) {\n      this._queue.splice(pos, 1);\n      task.cb.apply(null, args);\n    }\n\n  }\n\n};\n\n\nWorkQueue.prototype._next = function() {\n\n  if (this._paused) {\n    // Do not start tasks while paused.\n    return;\n  }\n\n  if (!this._queue.length) {\n    // No tasks to run.\n    return;\n  }\n\n  if (this._currentTask) {\n    // Will be called again when the current task finishes.\n    return;\n  }\n\n  if (this._lastFinished != null) {\n    var elapsed = now() - this._lastFinished;\n    var remaining = this._delay - elapsed;\n    if (remaining > 0) {\n      // Too soon. Run again after the inter-task delay.\n      setTimeout(this._next.bind(this), remaining);\n      return;\n    }\n  }\n\n  // Run the next task.\n  var task = this._queue.shift();\n  this._start(task);\n\n};\n\n\nmodule.exports = WorkQueue;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}