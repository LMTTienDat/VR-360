{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar HammerGestures = require('./HammerGestures');\nvar defaults = require('../util/defaults');\nvar maxFriction = require('./util').maxFriction;\nvar clearOwnProperties = require('../util/clearOwnProperties');\nvar defaultOptions = {\n  speed: 8,\n  friction: 6,\n  maxFrictionTime: 0.3\n};\n\n/**\n * @class QtvrControlMethod\n * @implements ControlMethod\n * @classdesc\n *\n * Controls the view by holding the mouse button down and moving it.\n * Also known as \"QTVR\" control mode.\n *\n * @param {Element} element Element to listen for events.\n * @param {string} pointerType Which Hammer.js pointer type to use (e.g.\n * `mouse` or `touch`).\n * @param {Object} opts\n * @param {number} opts.speed\n * @param {number} opts.friction\n * @param {number} opts.maxFrictionTime\n */\n// TODO: allow speed not change linearly with distance to click spot.\n// Quadratic or other would allow a larger speed range.\nfunction QtvrControlMethod(element, pointerType, opts) {\n  this._element = element;\n  this._opts = defaults(opts || {}, defaultOptions);\n  this._active = false;\n  this._hammer = HammerGestures.get(element, pointerType);\n  this._dynamics = {\n    x: new Dynamics(),\n    y: new Dynamics()\n  };\n  this._hammer.on('panstart', this._handleStart.bind(this));\n  this._hammer.on('panmove', this._handleMove.bind(this));\n  this._hammer.on('panend', this._handleRelease.bind(this));\n  this._hammer.on('pancancel', this._handleRelease.bind(this));\n}\neventEmitter(QtvrControlMethod);\n\n/**\n * Destructor.\n */\nQtvrControlMethod.prototype.destroy = function () {\n  this._hammer.release();\n  clearOwnProperties(this);\n};\nQtvrControlMethod.prototype._handleStart = function (e) {\n  // Prevent event dragging other DOM elements and causing strange behavior on Chrome\n  e.preventDefault();\n  if (!this._active) {\n    this._active = true;\n    this.emit('active');\n  }\n};\nQtvrControlMethod.prototype._handleMove = function (e) {\n  // Prevent event dragging other DOM elements and causing strange behavior on Chrome\n  e.preventDefault();\n  this._updateDynamics(e, false);\n};\nQtvrControlMethod.prototype._handleRelease = function (e) {\n  // Prevent event dragging other DOM elements and causing strange behavior on Chrome\n  e.preventDefault();\n  this._updateDynamics(e, true);\n  if (this._active) {\n    this._active = false;\n    this.emit('inactive');\n  }\n};\nvar tmpReleaseFriction = [null, null];\nQtvrControlMethod.prototype._updateDynamics = function (e, release) {\n  var elementRect = this._element.getBoundingClientRect();\n  var width = elementRect.right - elementRect.left;\n  var height = elementRect.bottom - elementRect.top;\n  var maxDim = Math.max(width, height);\n  var x = e.deltaX / maxDim * this._opts.speed;\n  var y = e.deltaY / maxDim * this._opts.speed;\n  this._dynamics.x.reset();\n  this._dynamics.y.reset();\n  this._dynamics.x.velocity = x;\n  this._dynamics.y.velocity = y;\n  if (release) {\n    maxFriction(this._opts.friction, this._dynamics.x.velocity, this._dynamics.y.velocity, this._opts.maxFrictionTime, tmpReleaseFriction);\n    this._dynamics.x.friction = tmpReleaseFriction[0];\n    this._dynamics.y.friction = tmpReleaseFriction[1];\n  }\n  this.emit('parameterDynamics', 'x', this._dynamics.x);\n  this.emit('parameterDynamics', 'y', this._dynamics.y);\n};\nmodule.exports = QtvrControlMethod;","map":{"version":3,"names":["eventEmitter","require","Dynamics","HammerGestures","defaults","maxFriction","clearOwnProperties","defaultOptions","speed","friction","maxFrictionTime","QtvrControlMethod","element","pointerType","opts","_element","_opts","_active","_hammer","get","_dynamics","x","y","on","_handleStart","bind","_handleMove","_handleRelease","prototype","destroy","release","e","preventDefault","emit","_updateDynamics","tmpReleaseFriction","elementRect","getBoundingClientRect","width","right","left","height","bottom","top","maxDim","Math","max","deltaX","deltaY","reset","velocity","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/controls/Qtvr.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar HammerGestures = require('./HammerGestures');\nvar defaults = require('../util/defaults');\nvar maxFriction = require('./util').maxFriction;\nvar clearOwnProperties = require('../util/clearOwnProperties');\n\n\nvar defaultOptions = {\n  speed: 8,\n  friction: 6,\n  maxFrictionTime: 0.3\n};\n\n\n/**\n * @class QtvrControlMethod\n * @implements ControlMethod\n * @classdesc\n *\n * Controls the view by holding the mouse button down and moving it.\n * Also known as \"QTVR\" control mode.\n *\n * @param {Element} element Element to listen for events.\n * @param {string} pointerType Which Hammer.js pointer type to use (e.g.\n * `mouse` or `touch`).\n * @param {Object} opts\n * @param {number} opts.speed\n * @param {number} opts.friction\n * @param {number} opts.maxFrictionTime\n */\n// TODO: allow speed not change linearly with distance to click spot.\n// Quadratic or other would allow a larger speed range.\nfunction QtvrControlMethod(element, pointerType, opts) {\n  this._element = element;\n\n  this._opts = defaults(opts || {}, defaultOptions);\n\n  this._active = false;\n\n  this._hammer = HammerGestures.get(element, pointerType);\n\n  this._dynamics = {\n    x: new Dynamics(),\n    y: new Dynamics()\n  };\n\n  this._hammer.on('panstart', this._handleStart.bind(this));\n  this._hammer.on('panmove', this._handleMove.bind(this));\n  this._hammer.on('panend', this._handleRelease.bind(this));\n  this._hammer.on('pancancel', this._handleRelease.bind(this));\n}\n\neventEmitter(QtvrControlMethod);\n\n/**\n * Destructor.\n */\nQtvrControlMethod.prototype.destroy = function() {\n  this._hammer.release();\n  clearOwnProperties(this);\n};\n\n\nQtvrControlMethod.prototype._handleStart = function(e) {\n  // Prevent event dragging other DOM elements and causing strange behavior on Chrome\n  e.preventDefault();\n\n  if (!this._active) {\n    this._active = true;\n    this.emit('active');\n  }\n};\n\n\nQtvrControlMethod.prototype._handleMove = function(e) {\n  // Prevent event dragging other DOM elements and causing strange behavior on Chrome\n  e.preventDefault();\n\n  this._updateDynamics(e, false);\n};\n\n\nQtvrControlMethod.prototype._handleRelease = function(e) {\n  // Prevent event dragging other DOM elements and causing strange behavior on Chrome\n  e.preventDefault();\n\n  this._updateDynamics(e, true);\n\n  if (this._active) {\n    this._active = false;\n    this.emit('inactive');\n  }\n};\n\n\nvar tmpReleaseFriction = [ null, null ];\nQtvrControlMethod.prototype._updateDynamics = function(e, release) {\n  var elementRect = this._element.getBoundingClientRect();\n  var width = elementRect.right - elementRect.left;\n  var height = elementRect.bottom - elementRect.top;\n  var maxDim = Math.max(width, height);\n\n  var x = e.deltaX / maxDim * this._opts.speed;\n  var y = e.deltaY / maxDim * this._opts.speed;\n\n  this._dynamics.x.reset();\n  this._dynamics.y.reset();\n  this._dynamics.x.velocity = x;\n  this._dynamics.y.velocity = y;\n\n  if (release) {\n    maxFriction(this._opts.friction, this._dynamics.x.velocity, this._dynamics.y.velocity, this._opts.maxFrictionTime, tmpReleaseFriction);\n    this._dynamics.x.friction = tmpReleaseFriction[0];\n    this._dynamics.y.friction = tmpReleaseFriction[1];\n  }\n\n  this.emit('parameterDynamics', 'x', this._dynamics.x);\n  this.emit('parameterDynamics', 'y', this._dynamics.y);\n};\n\n\nmodule.exports = QtvrControlMethod;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}