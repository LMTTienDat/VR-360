{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar HammerGestures = require('./HammerGestures');\nvar clearOwnProperties = require('../util/clearOwnProperties');\n\n/**\n * @class PinchZoomControlMethod\n * @implements ControlMethod\n * @classdesc\n *\n * Control the view fov/zoom by pinching with two fingers.\n *\n * @param {Element} element Element to listen for events.\n * @param {string} pointerType Which Hammer.js pointer type to use\n * @param {Object} opts\n */\nfunction PinchZoomControlMethod(element, pointerType, opts) {\n  this._hammer = HammerGestures.get(element, pointerType);\n  this._lastEvent = null;\n  this._active = false;\n  this._dynamics = new Dynamics();\n  this._hammer.on('pinchstart', this._handleStart.bind(this));\n  this._hammer.on('pinch', this._handleEvent.bind(this));\n  this._hammer.on('pinchend', this._handleEnd.bind(this));\n  this._hammer.on('pinchcancel', this._handleEnd.bind(this));\n}\neventEmitter(PinchZoomControlMethod);\n\n/**\n * Destructor.\n */\nPinchZoomControlMethod.prototype.destroy = function () {\n  this._hammer.release();\n  clearOwnProperties(this);\n};\nPinchZoomControlMethod.prototype._handleStart = function () {\n  if (!this._active) {\n    this._active = true;\n    this.emit('active');\n  }\n};\nPinchZoomControlMethod.prototype._handleEnd = function () {\n  this._lastEvent = null;\n  if (this._active) {\n    this._active = false;\n    this.emit('inactive');\n  }\n};\nPinchZoomControlMethod.prototype._handleEvent = function (e) {\n  var scale = e.scale;\n  if (this._lastEvent) {\n    scale /= this._lastEvent.scale;\n  }\n  this._dynamics.offset = (scale - 1) * -1;\n  this.emit('parameterDynamics', 'zoom', this._dynamics);\n  this._lastEvent = e;\n};\nmodule.exports = PinchZoomControlMethod;","map":{"version":3,"names":["eventEmitter","require","Dynamics","HammerGestures","clearOwnProperties","PinchZoomControlMethod","element","pointerType","opts","_hammer","get","_lastEvent","_active","_dynamics","on","_handleStart","bind","_handleEvent","_handleEnd","prototype","destroy","release","emit","e","scale","offset","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/controls/PinchZoom.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar HammerGestures = require('./HammerGestures');\nvar clearOwnProperties = require('../util/clearOwnProperties');\n\n/**\n * @class PinchZoomControlMethod\n * @implements ControlMethod\n * @classdesc\n *\n * Control the view fov/zoom by pinching with two fingers.\n *\n * @param {Element} element Element to listen for events.\n * @param {string} pointerType Which Hammer.js pointer type to use\n * @param {Object} opts\n */\nfunction PinchZoomControlMethod(element, pointerType, opts) {\n  this._hammer = HammerGestures.get(element, pointerType);\n\n  this._lastEvent = null;\n\n  this._active = false;\n\n  this._dynamics = new Dynamics();\n\n  this._hammer.on('pinchstart', this._handleStart.bind(this));\n  this._hammer.on('pinch', this._handleEvent.bind(this));\n  this._hammer.on('pinchend', this._handleEnd.bind(this));\n  this._hammer.on('pinchcancel', this._handleEnd.bind(this));\n}\n\neventEmitter(PinchZoomControlMethod);\n\n/**\n * Destructor.\n */\nPinchZoomControlMethod.prototype.destroy = function() {\n  this._hammer.release();\n  clearOwnProperties(this);\n};\n\n\nPinchZoomControlMethod.prototype._handleStart = function() {\n  if (!this._active) {\n    this._active = true;\n    this.emit('active');\n  }\n};\n\n\nPinchZoomControlMethod.prototype._handleEnd = function() {\n  this._lastEvent = null;\n\n  if (this._active) {\n    this._active = false;\n    this.emit('inactive');\n  }\n};\n\n\nPinchZoomControlMethod.prototype._handleEvent = function(e) {\n  var scale = e.scale;\n\n  if (this._lastEvent) {\n    scale /= this._lastEvent.scale;\n  }\n\n  this._dynamics.offset = (scale - 1) * -1;\n  this.emit('parameterDynamics', 'zoom', this._dynamics);\n\n  this._lastEvent = e;\n};\n\n\nmodule.exports = PinchZoomControlMethod;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACnD,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC;AACpC,IAAIE,cAAc,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAChD,IAAIG,kBAAkB,GAAGH,OAAO,CAAC,4BAA4B,CAAC;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,sBAAsBA,CAACC,OAAO,EAAEC,WAAW,EAAEC,IAAI,EAAE;EAC1D,IAAI,CAACC,OAAO,GAAGN,cAAc,CAACO,GAAG,CAACJ,OAAO,EAAEC,WAAW,CAAC;EAEvD,IAAI,CAACI,UAAU,GAAG,IAAI;EAEtB,IAAI,CAACC,OAAO,GAAG,KAAK;EAEpB,IAAI,CAACC,SAAS,GAAG,IAAIX,QAAQ,CAAC,CAAC;EAE/B,IAAI,CAACO,OAAO,CAACK,EAAE,CAAC,YAAY,EAAE,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3D,IAAI,CAACP,OAAO,CAACK,EAAE,CAAC,OAAO,EAAE,IAAI,CAACG,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC;EACtD,IAAI,CAACP,OAAO,CAACK,EAAE,CAAC,UAAU,EAAE,IAAI,CAACI,UAAU,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,IAAI,CAACP,OAAO,CAACK,EAAE,CAAC,aAAa,EAAE,IAAI,CAACI,UAAU,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5D;AAEAhB,YAAY,CAACK,sBAAsB,CAAC;;AAEpC;AACA;AACA;AACAA,sBAAsB,CAACc,SAAS,CAACC,OAAO,GAAG,YAAW;EACpD,IAAI,CAACX,OAAO,CAACY,OAAO,CAAC,CAAC;EACtBjB,kBAAkB,CAAC,IAAI,CAAC;AAC1B,CAAC;AAGDC,sBAAsB,CAACc,SAAS,CAACJ,YAAY,GAAG,YAAW;EACzD,IAAI,CAAC,IAAI,CAACH,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAG,IAAI;IACnB,IAAI,CAACU,IAAI,CAAC,QAAQ,CAAC;EACrB;AACF,CAAC;AAGDjB,sBAAsB,CAACc,SAAS,CAACD,UAAU,GAAG,YAAW;EACvD,IAAI,CAACP,UAAU,GAAG,IAAI;EAEtB,IAAI,IAAI,CAACC,OAAO,EAAE;IAChB,IAAI,CAACA,OAAO,GAAG,KAAK;IACpB,IAAI,CAACU,IAAI,CAAC,UAAU,CAAC;EACvB;AACF,CAAC;AAGDjB,sBAAsB,CAACc,SAAS,CAACF,YAAY,GAAG,UAASM,CAAC,EAAE;EAC1D,IAAIC,KAAK,GAAGD,CAAC,CAACC,KAAK;EAEnB,IAAI,IAAI,CAACb,UAAU,EAAE;IACnBa,KAAK,IAAI,IAAI,CAACb,UAAU,CAACa,KAAK;EAChC;EAEA,IAAI,CAACX,SAAS,CAACY,MAAM,GAAG,CAACD,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;EACxC,IAAI,CAACF,IAAI,CAAC,mBAAmB,EAAE,MAAM,EAAE,IAAI,CAACT,SAAS,CAAC;EAEtD,IAAI,CAACF,UAAU,GAAGY,CAAC;AACrB,CAAC;AAGDG,MAAM,CAACC,OAAO,GAAGtB,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}