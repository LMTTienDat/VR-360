{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar defaults = require('../util/defaults');\nvar clearOwnProperties = require('../util/clearOwnProperties');\nvar defaultOptions = {\n  frictionTime: 0.2,\n  zoomDelta: 0.001\n};\n\n/**\n * @class ScrollZoomControlMethod\n * @implements ControlMethod\n * @classdesc\n *\n * Controls the fov/zoom through the mouse wheel.\n *\n * @param {Element} element Element to listen for events.\n * @param {Object} opts\n * @param {number} [opts.frictionTime=0.2]\n * @param {number} [opts.zoomDelta=0.001]\n */\nfunction ScrollZoomControlMethod(element, opts) {\n  this._element = element;\n  this._opts = defaults(opts || {}, defaultOptions);\n  this._dynamics = new Dynamics();\n  this._eventList = [];\n  var fn = this._opts.frictionTime ? this.withSmoothing : this.withoutSmoothing;\n  this._wheelListener = fn.bind(this);\n  element.addEventListener('wheel', this._wheelListener);\n}\neventEmitter(ScrollZoomControlMethod);\n\n/**\n * Destructor.\n */\nScrollZoomControlMethod.prototype.destroy = function () {\n  this._element.removeEventListener('wheel', this._wheelListener);\n  clearOwnProperties(this);\n};\nScrollZoomControlMethod.prototype.withoutSmoothing = function (e) {\n  this._dynamics.offset = wheelEventDelta(e) * this._opts.zoomDelta;\n  this.emit('parameterDynamics', 'zoom', this._dynamics);\n  e.preventDefault();\n  this.emit('active');\n  this.emit('inactive');\n};\nScrollZoomControlMethod.prototype.withSmoothing = function (e) {\n  var currentTime = e.timeStamp;\n\n  // Record event.\n  this._eventList.push(e);\n\n  // Remove events whose smoothing has already expired.\n  while (this._eventList[0].timeStamp < currentTime - this._opts.frictionTime * 1000) {\n    this._eventList.shift(0);\n  }\n\n  // Get the current velocity from the recorded events.\n  // Each wheel movement causes a velocity of change/frictionTime during frictionTime.\n  var velocity = 0;\n  for (var i = 0; i < this._eventList.length; i++) {\n    var zoomChangeFromEvent = wheelEventDelta(this._eventList[i]) * this._opts.zoomDelta;\n    velocity += zoomChangeFromEvent / this._opts.frictionTime;\n  }\n  this._dynamics.velocity = velocity;\n  this._dynamics.friction = Math.abs(velocity) / this._opts.frictionTime;\n  this.emit('parameterDynamics', 'zoom', this._dynamics);\n  e.preventDefault();\n  this.emit('active');\n  this.emit('inactive');\n};\nfunction wheelEventDelta(e) {\n  var multiplier = e.deltaMode == 1 ? 20 : 1;\n  return e.deltaY * multiplier;\n}\nmodule.exports = ScrollZoomControlMethod;","map":{"version":3,"names":["eventEmitter","require","Dynamics","defaults","clearOwnProperties","defaultOptions","frictionTime","zoomDelta","ScrollZoomControlMethod","element","opts","_element","_opts","_dynamics","_eventList","fn","withSmoothing","withoutSmoothing","_wheelListener","bind","addEventListener","prototype","destroy","removeEventListener","e","offset","wheelEventDelta","emit","preventDefault","currentTime","timeStamp","push","shift","velocity","i","length","zoomChangeFromEvent","friction","Math","abs","multiplier","deltaMode","deltaY","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/controls/ScrollZoom.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar eventEmitter = require('minimal-event-emitter');\nvar Dynamics = require('./Dynamics');\nvar defaults = require('../util/defaults');\nvar clearOwnProperties = require('../util/clearOwnProperties');\n\nvar defaultOptions = {\n  frictionTime: 0.2,\n  zoomDelta: 0.001\n};\n\n/**\n * @class ScrollZoomControlMethod\n * @implements ControlMethod\n * @classdesc\n *\n * Controls the fov/zoom through the mouse wheel.\n *\n * @param {Element} element Element to listen for events.\n * @param {Object} opts\n * @param {number} [opts.frictionTime=0.2]\n * @param {number} [opts.zoomDelta=0.001]\n */\nfunction ScrollZoomControlMethod(element, opts) {\n  this._element = element;\n  this._opts = defaults(opts || {}, defaultOptions);\n  this._dynamics = new Dynamics();\n  this._eventList = [];\n\n  var fn = this._opts.frictionTime ? this.withSmoothing : this.withoutSmoothing;\n  this._wheelListener = fn.bind(this);\n  \n  element.addEventListener('wheel', this._wheelListener);\n}\n\neventEmitter(ScrollZoomControlMethod);\n\n/**\n * Destructor.\n */\nScrollZoomControlMethod.prototype.destroy = function() {\n  this._element.removeEventListener('wheel', this._wheelListener);\n  clearOwnProperties(this);\n};\n\n\nScrollZoomControlMethod.prototype.withoutSmoothing = function(e) {\n  this._dynamics.offset = wheelEventDelta(e) * this._opts.zoomDelta;\n  this.emit('parameterDynamics', 'zoom', this._dynamics);\n\n  e.preventDefault();\n\n  this.emit('active');\n  this.emit('inactive');\n};\n\n\nScrollZoomControlMethod.prototype.withSmoothing = function(e) {\n  var currentTime = e.timeStamp;\n\n  // Record event.\n  this._eventList.push(e);\n\n  // Remove events whose smoothing has already expired.\n  while (this._eventList[0].timeStamp < currentTime - this._opts.frictionTime*1000) {\n    this._eventList.shift(0);\n  }\n\n  // Get the current velocity from the recorded events.\n  // Each wheel movement causes a velocity of change/frictionTime during frictionTime.\n  var velocity = 0;\n  for (var i = 0; i < this._eventList.length; i++) {\n    var zoomChangeFromEvent = wheelEventDelta(this._eventList[i]) * this._opts.zoomDelta;\n    velocity += zoomChangeFromEvent / this._opts.frictionTime;\n  }\n\n  this._dynamics.velocity = velocity;\n  this._dynamics.friction = Math.abs(velocity) / this._opts.frictionTime;\n\n  this.emit('parameterDynamics', 'zoom', this._dynamics);\n\n  e.preventDefault();\n\n  this.emit('active');\n  this.emit('inactive');\n};\n\n\nfunction wheelEventDelta(e) {\n  var multiplier = e.deltaMode == 1 ? 20 : 1;\n  return e.deltaY * multiplier;\n}\n\n\nmodule.exports = ScrollZoomControlMethod;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}