{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nfunction maxFriction(friction, velocityX, velocityY, maxFrictionTime, result) {\n  var velocity = Math.sqrt(Math.pow(velocityX, 2) + Math.pow(velocityY, 2));\n  friction = Math.max(friction, velocity / maxFrictionTime);\n  changeVectorNorm(velocityX, velocityY, friction, result);\n  result[0] = Math.abs(result[0]);\n  result[1] = Math.abs(result[1]);\n}\nfunction changeVectorNorm(x, y, n, result) {\n  var theta = Math.atan(y / x);\n  result[0] = n * Math.cos(theta);\n  result[1] = n * Math.sin(theta);\n}\nmodule.exports = {\n  maxFriction: maxFriction,\n  changeVectorNorm: changeVectorNorm\n};","map":{"version":3,"names":["maxFriction","friction","velocityX","velocityY","maxFrictionTime","result","velocity","Math","sqrt","pow","max","changeVectorNorm","abs","x","y","n","theta","atan","cos","sin","module","exports"],"sources":["E:/VR/node_modules/marzipano/src/controls/util.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nfunction maxFriction(friction, velocityX, velocityY, maxFrictionTime, result) {\n  var velocity = Math.sqrt(Math.pow(velocityX,2) + Math.pow(velocityY,2));\n  friction = Math.max(friction, velocity/maxFrictionTime);\n  changeVectorNorm(velocityX, velocityY, friction, result);\n  result[0] = Math.abs(result[0]);\n  result[1] = Math.abs(result[1]);\n}\n\nfunction changeVectorNorm(x, y, n, result) {\n  var theta = Math.atan(y/x);\n  result[0] = n * Math.cos(theta);\n  result[1] = n * Math.sin(theta);\n}\n\nmodule.exports = {\n  maxFriction: maxFriction,\n  changeVectorNorm: changeVectorNorm\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,SAASA,WAAWA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAAEC,eAAe,EAAEC,MAAM,EAAE;EAC5E,IAAIC,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,GAAG,CAACP,SAAS,EAAC,CAAC,CAAC,GAAGK,IAAI,CAACE,GAAG,CAACN,SAAS,EAAC,CAAC,CAAC,CAAC;EACvEF,QAAQ,GAAGM,IAAI,CAACG,GAAG,CAACT,QAAQ,EAAEK,QAAQ,GAACF,eAAe,CAAC;EACvDO,gBAAgB,CAACT,SAAS,EAAEC,SAAS,EAAEF,QAAQ,EAAEI,MAAM,CAAC;EACxDA,MAAM,CAAC,CAAC,CAAC,GAAGE,IAAI,CAACK,GAAG,CAACP,MAAM,CAAC,CAAC,CAAC,CAAC;EAC/BA,MAAM,CAAC,CAAC,CAAC,GAAGE,IAAI,CAACK,GAAG,CAACP,MAAM,CAAC,CAAC,CAAC,CAAC;AACjC;AAEA,SAASM,gBAAgBA,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEV,MAAM,EAAE;EACzC,IAAIW,KAAK,GAAGT,IAAI,CAACU,IAAI,CAACH,CAAC,GAACD,CAAC,CAAC;EAC1BR,MAAM,CAAC,CAAC,CAAC,GAAGU,CAAC,GAAGR,IAAI,CAACW,GAAG,CAACF,KAAK,CAAC;EAC/BX,MAAM,CAAC,CAAC,CAAC,GAAGU,CAAC,GAAGR,IAAI,CAACY,GAAG,CAACH,KAAK,CAAC;AACjC;AAEAI,MAAM,CAACC,OAAO,GAAG;EACfrB,WAAW,EAAEA,WAAW;EACxBW,gBAAgB,EAAEA;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}