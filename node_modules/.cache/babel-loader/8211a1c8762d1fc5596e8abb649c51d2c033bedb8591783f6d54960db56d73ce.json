{"ast":null,"code":"/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nmodule.exports = ['#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', '#else', 'precision mediump float;', '#endif', 'uniform sampler2D uSampler;', 'uniform float uOpacity;', 'uniform vec4 uColorOffset;', 'uniform mat4 uColorMatrix;', 'varying vec2 vTextureCoord;', 'void main(void) {', '  vec4 color = texture2D(uSampler, vTextureCoord) * uColorMatrix + uColorOffset;', '  gl_FragColor = vec4(color.rgba * uOpacity);', '}'].join('\\n');","map":{"version":3,"names":["module","exports","join"],"sources":["E:/VR/node_modules/marzipano/src/shaders/fragmentNormal.js"],"sourcesContent":["/*\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nmodule.exports = [\n'#ifdef GL_FRAGMENT_PRECISION_HIGH',\n'precision highp float;',\n'#else',\n'precision mediump float;',\n'#endif',\n\n'uniform sampler2D uSampler;',\n'uniform float uOpacity;',\n'uniform vec4 uColorOffset;',\n'uniform mat4 uColorMatrix;',\n\n'varying vec2 vTextureCoord;',\n\n'void main(void) {',\n'  vec4 color = texture2D(uSampler, vTextureCoord) * uColorMatrix + uColorOffset;',\n'  gl_FragColor = vec4(color.rgba * uOpacity);',\n'}'\n].join('\\n');\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,CACjB,mCAAmC,EACnC,wBAAwB,EACxB,OAAO,EACP,0BAA0B,EAC1B,QAAQ,EAER,6BAA6B,EAC7B,yBAAyB,EACzB,4BAA4B,EAC5B,4BAA4B,EAE5B,6BAA6B,EAE7B,mBAAmB,EACnB,kFAAkF,EAClF,+CAA+C,EAC/C,GAAG,CACF,CAACC,IAAI,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}